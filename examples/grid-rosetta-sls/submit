#!/bin/bash

set -e


#######################################################################
#
#  Settings
#
CLUSTER_NAME="RENCI-Engagement"
CLUSTER_HOSTNAME="belhaven-1.renci.org"
CLUSTER_SCHEDULER="condor"

# pegasus still has to create a shared directory - hopefully this
# will go away after Pegasus 3.0
CLUSTER_WORK_DIR="/nfs/osg-data/engage/tmp"

# local filesystem where the jobs will actually run
CLUSTER_WN_TMP="/condor/osg_wn_tmp"

# Globus is required on the remote side for globus-url-copy
CLUSTER_GLOBUS_LOCATION="/nfs/software/osg-wn/current/globus"

#######################################################################

TOPDIR=`pwd`
LOCAL_HOSTNAME=`hostname -f`

# figure out where Pegasus is installed
export PEGASUS_HOME=`which pegasus-plan | sed 's:/bin/pegasus-plan::'`
if [ "x$PEGASUS_HOME" = "x" ]; then
    echo "Unable to determine location of your Pegasus install"
    echo "Please make sure pegasus-plan is in your path"
    exit 1
fi 

# do we have the required minirosetta_database?
if [ ! -e minirosetta_database ]; then
   wget -nv http://www.isi.edu/~rynge/pegasus/example-workflows/minirosetta_database.tar.gz
   tar xzf minirosetta_database.tar.gz
   rm minirosetta_database.tar.gz
fi

# what about the required pdbs?
if [ ! -e pdbs ]; then
   wget http://www.isi.edu/~rynge/pegasus/example-workflows/pdbs.tar.gz
   tar xzf pdbs.tar.gz
   rm pdbs.tar.gz
fi

# build the dax generator
export CLASSPATH=.:$PEGASUS_HOME/lib/pegasus.jar:$CLASSPATH
javac RosettaDAX.java

# generate the dax
java RosettaDAX dax.xml $CLUSTER_NAME

# site catalog
cat >sites.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-3.0.xsd" version="3.0">
    <site  handle="local" arch="x86" os="LINUX">
        <grid  type="gt2" contact="localhost/jobmanager-fork" scheduler="Fork" jobtype="auxillary"/>
        <head-fs>
            <scratch>
                <shared>
                    <file-server protocol="gsiftp" url="gsiftp://$LOCAL_HOSTNAME" mount-point="$TOPDIR/outputs"/>
                    <internal-mount-point mount-point="$TOPDIR/outputs" free-size="100G" total-size="30G"/>
                </shared>
            </scratch>
            <storage>
                <shared>
                    <file-server protocol="gsiftp" url="gsiftp://$LOCAL_HOSTNAME" mount-point="$TOPDIR/outputs"/>
                    <internal-mount-point mount-point="$TOPDIR/outputs" free-size="100G" total-size="30G"/>
                </shared>
            </storage>
        </head-fs>
        <replica-catalog  type="LRC" url="rlsn://dummyValue.url.edu" />
        <profile namespace="env" key="PEGASUS_HOME" >$PEGASUS_HOME</profile>
        <profile namespace="env" key="GLOBUS_LOCATION" >$GLOBUS_LOCATION</profile>
    </site>
    <site  handle="$CLUSTER_NAME" arch="x86" os="LINUX">
        <grid  type="gt2" contact="$CLUSTER_HOSTNAME/jobmanager-fork" scheduler="Fork" jobtype="auxillary"/>
        <grid  type="gt2" contact="$CLUSTER_HOSTNAME/jobmanager-$CLUSTER_SCHEDULER" scheduler="unknown" jobtype="compute"/>
        <head-fs>
            <scratch>
                <shared>
                    <file-server protocol="file" url="file://" mount-point="$CLUSTER_WORK_DIR"/>
                    <internal-mount-point mount-point="$CLUSTER_WORK_DIR"/>
                </shared>
            </scratch>
            <storage>
                <shared>
                    <file-server protocol="file" url="file://" mount-point="$CLUSTER_WORK_DIR"/>
                    <internal-mount-point mount-point="$CLUSTER_WORK_DIR"/>
                </shared>
            </storage>
        </head-fs>
        <replica-catalog  type="LRC" url="rlsn://dummyValue.url.edu" />
        <profile namespace="env" key="GLOBUS_LOCATION" >$CLUSTER_GLOBUS_LOCATION</profile>
        <profile namespace="env" key="wmtmp" >$CLUSTER_WN_TMP</profile>
    </site>
</sitecatalog>
EOF

echo
echo
pegasus-plan \
    -D pegasus.user.properties=pegasusrc \
    --sites $CLUSTER_NAME \
    --nocleanup \
    --dir work \
    --output local \
    --dax dax.xml \
    --submit


