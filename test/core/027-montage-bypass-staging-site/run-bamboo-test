#!/bin/bash

set -e

TOP_DIR=`pwd`

export PATH=/ccg/software/montage/current/bin:$PATH

# unique directory for this run
RUN_ID=`/bin/date +'%F_%H%M%S'`
RUN_DIR=`pwd`/work/$RUN_ID

rm -rf montage-workflow-v2
git clone https://github.com/pegasus-isi/montage-workflow-v2.git

echo
cd montage-workflow-v2
./montage-workflow.py --center "275.196290 -16.171530" \
                      --degrees 0.2 \
                      --band 2mass:j:green \
                      --band 2mass:h:blue \
                      --band 2mass:k:red

# override the site catalog
cat >sites.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-3.0.xsd" version="3.0">
    <site handle="local" arch="x86_64" os="LINUX" osrelease="deb" osversion="8">
        <grid  type="gt2" contact="localhost/jobmanager-fork" scheduler="Fork" jobtype="auxillary"/>
        <head-fs>
            <scratch>
                <shared>
                    <file-server protocol="file" url="file://" mount-point="$RUN_DIR/scratch"/>
                    <internal-mount-point mount-point="$RUN_DIR/scratch"/>
                </shared>
            </scratch>
            <storage>
                <shared>
                    <file-server protocol="file" url="file://" mount-point="$RUN_DIR/outputs"/>
                    <internal-mount-point mount-point="$RUN_DIR/outputs"/>
                </shared>
            </storage>
        </head-fs>
        <profile namespace="env" key="http_proxy" >http://workflow.isi.edu:3128</profile>
    </site>
    <site handle="CCG" arch="x86_64" os="LINUX">
        <head-fs>
            <scratch />
            <storage />
        </head-fs>
        <profile namespace="pegasus" key="style">condor</profile>
        <profile namespace="env" key="MONTAGE_HOME" >/ccg/software/montage/current</profile>
        <profile namespace="env" key="http_proxy" >http://workflow.isi.edu:3128</profile>
    </site>
    <site handle="CCGData">
        <head-fs>
            <scratch>
                <shared>
                    <file-server protocol="gsiftp" url="gsiftp://obelix.isi.edu" mount-point="/data/scratch/ptesting"/>
                    <internal-mount-point mount-point="/data/scratch/ptesting"/>
                </shared>
            </scratch>
            <storage />
        </head-fs>
    </site>
</sitecatalog>
EOF

pegasus-plan \
        --conf ../pegasusrc \
        --dir work \
        --relative-dir `date +'%s'` \
        --dax data/montage.dax \
        --sites CCG \
        --staging-site CCGData \
        --output-site local \
        --cluster horizontal \
        | tee $TOP_DIR/plan.out


WORK_DIR=`cat $TOP_DIR/plan.out | grep pegasus-run | sed -E 's/.*pegasus-run[ ]+//'` 
if [ "x$WORK_DIR" = "x" ]; then
    echo "Unable to determine work directory from the planner output"
    exit 1
fi
echo "work directory is $WORK_DIR"
cd $WORK_DIR

# make sure that none of the http inputs are in the stage in jobs
for STAGE_IN in `find $WORK_DIR -name stage_in_\*.in`; do
    if (cat $STAGE_IN | grep "http://") >/dev/null 2>&1; then
        echo "Error: $STAGE_IN has a http:// file even though we asked for a bypass"
        exit 1
    fi
done

# now we are good to submit
echo "Submitting the workflow for execution"
pegasus-run $WORK_DIR

