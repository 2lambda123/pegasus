#!/bin/bash

set -e

TOP_DIR=`pwd`

# limit the memory - this is to the test the common.sh ulimit check
ulimit -m 512000

# download rosetta binary - this is to save space in the Pegasus distribution
if [ ! -e rosetta.exe ]; then
   wget -q -O rosetta.exe http://pegasus.isi.edu/wms/example-workflows/rosetta/fake-rosetta.exe
   chmod 755 rosetta.exe
fi

# do we have the required minirosetta_database?
if [ ! -e minirosetta_database ]; then
   wget -q http://pegasus.isi.edu/wms/example-workflows/rosetta/minirosetta_database.tar.gz
   tar xzf minirosetta_database.tar.gz
   rm minirosetta_database.tar.gz
fi

# what about the required pdbs?
if [ ! -e pdbs ]; then
   wget -q http://pegasus.isi.edu/wms/example-workflows/rosetta/pdbs.tar.gz
   tar xzf pdbs.tar.gz
   rm pdbs.tar.gz
fi

# figure out where Pegasus is installed
export PEGASUS_BIN_DIR=`pegasus-config --bin`
if [ "x$PEGASUS_BIN_DIR" = "x" ]; then
    echo "Please make sure pegasus-plan is in your path"
    exit 1
fi

# build the dax generator
export CLASSPATH=.:`pegasus-config --classpath`
javac RosettaDAX.java

# generate the dax
java RosettaDAX dax.xml

# site catalog
cat > sites.yml <<EOF
pegasus: "5.0"
sites:
 -
  name: "CCG"
  arch: "x86_64"
  os.type: "linux"
  grids:
   -
    type: "gt5"
    contact: "obelix.isi.edu/jobmanager-fork"
    scheduler: "fork"
    jobtype: "auxillary"
   -
    type: "gt5"
    contact: "obelix.isi.edu/jobmanager-condor"
    scheduler: "unknown"
    jobtype: "compute"
  profiles:
    env:
      PEGASUS_FORCE_GUC: "1"
 -
  name: "local"
  arch: "x86_64"
  os.type: "linux"
  directories:
   -
    type: "sharedStorage"
    path: "$TOP_DIR/outputs"
    fileServers:
     -
      operation: "all"
      url: "gsiftp://bamboo.isi.edu$TOP_DIR/outputs"
   -
    type: "sharedScratch"
    path: "$TOP_DIR/scratch"
    fileServers:
     -
      operation: "all"
      url: "gsiftp://bamboo.isi.edu$TOP_DIR/scratch"
  grids:
   -
    type: "gt2"
    contact: "localhost/jobmanager-fork"
    scheduler: "fork"
    jobtype: "auxillary"
  profiles:
    env:
      PEGASUS_BIN_DIR: "$PEGASUS_BIN_DIR"
 -
  name: "CCG_Staging"
  arch: "x86_64"
  os.type: "linux"
  directories:
   -
    type: "sharedScratch"
    path: "/data/scratch/ptesting"
    fileServers:
     -
      operation: "all"
      url: "gsiftp://obelix.isi.edu/data/scratch/ptesting"
EOF

echo
echo
echo "Planning and submitting the workflow..."
pegasus-plan \
    --conf pegasusrc \
    --dir work \
    --dax dax.xml \
    --sites CCG \
    --staging-site CCG_Staging \
    --output-sites local \
    --submit | tee $TOP_DIR/plan.out


