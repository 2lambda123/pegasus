#!/bin/bash

set -e

PEGASUS_TAR=$1
echo "Input tar file: $PEGASUS_TAR"

START_DIR=`pwd`

BASE_DIR=`dirname $0`
BASE_DIR=`(cd $BASE_DIR && pwd)`

WORK_DIR=`mktemp -t -d deb.XXXXXX`

# os name (debian/ubuntu/...) and codename
OS_NAME=`lsb_release -i -s | tr "[:upper:]" "[:lower:]"`
OS_CODENAME=`lsb_release -c -s | tr "[:upper:]" "[:lower:]"`

# arch
ARCH=`uname -m`
if [ $ARCH = "x86_64" ]; then
    ARCH="amd64"
else
    ARCH="i386"
fi

# output target dir
DIST_DIR="$OS_NAME/dists/$OS_CODENAME/main/binary-$ARCH"
echo "Output directory: $DIST_DIR"

# untar the pegasus original tarball
cd $WORK_DIR
if [ "x$PEGASUS_TAR" = "x" -o ! -e "$PEGASUS_TAR" ]; then
    echo "The pegasus tar file specified as the first arg does not exist"
    echo "or it was not specified with the full path."
    exit 1
fi
tar -x -z --no-same-owner -f $PEGASUS_TAR
ls -al pegasus-*

# pegasus version
VERSION=`ls $PEGASUS_TAR | sed 's/.*binary-//' | sed 's/-.*//'`
MAJOR_VERSION=`echo $VERSION | sed -r 's/\.[0-9]+([0-9a-zA-Z]*)$/\1/'`

DEB_VERSION="$VERSION"
# cvs versions get a timestamp in the version to help dpkg figure out updates
if echo $VERSION | grep cvs >/dev/null 2>&1; then
    TS=`date +'%Y%m%d%H%M'`
    DEB_VERSION="$VERSION.$TS"
fi

echo "Pegasus version: $VERSION"
echo "Debian package version: $DEB_VERSION"
echo "Debian package major version: $MAJOR_VERSION"

# base structure
DEB_NAME=pegasus-${MAJOR_VERSION}_${DEB_VERSION}_${ARCH}
mkdir -p $DEB_NAME/opt/pegasus
mv pegasus-$VERSION $DEB_NAME/opt/pegasus/$MAJOR_VERSION
cd $DEB_NAME

# debian control files
cp -r $BASE_DIR/DEBIAN ./
rm -rf DEBIAN/.svn

# package name
perl -p -i -e "s/^Package:.*/Package: pegasus-${MAJOR_VERSION}/" DEBIAN/control

# machine arch
perl -p -i -e "s/^Architecture:.*/Architecture: $ARCH/" DEBIAN/control

# checksums
find opt -type f -exec md5sum {} \; >DEBIAN/md5sums

# version
perl -p -i -e "s/^Version:.*/Version: $DEB_VERSION/" DEBIAN/control

# size
SIZE=`du -s opt | awk '{print $1}'`
perl -p -i -e "s/^Installed-Size:.*/Installed-Size: $SIZE/" DEBIAN/control

# now build the deb
cd $WORK_DIR
dpkg-deb --build $DEB_NAME
ls -l -h *.deb
mkdir -p $START_DIR/$DIST_DIR
mv *.deb $START_DIR/$DIST_DIR

cd $START_DIR
rm -rf $WORK_DIR

