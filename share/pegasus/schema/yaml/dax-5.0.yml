.yml$schema: 'http://json-schema.org/draft-07/schema#'
$id: 'file:///Users/ryantanaka/ISI/pegasus/share/pegasus/schema/yaml/dax-5.0.yml'
$defs:
  # --- a file object ----------------------------------------------------------
  file:
    type: object
    properties:
      lfn:
        type: string
      metadata:
        $ref: 'common.yml#/$defs/metadata'
    required:
      - lfn
    additionalProperties: false
    patternProperties:
      ^x-:
        $ref: 'common.yml#/$defs/vendorExtension'

  # --- abstractJob 'use' types ------------------------------------------------
  linkType:
    enum:
      - none
      - input
      - output
      - inout

  # --- workflow job types -----------------------------------------------------
  abstractJob:
    type: object
    properties:
      id:
        $ref: 'common.yml#/$defs/nodeIdString'
      nodeLabel:
        type: string
      metadata:
        $ref: 'common.yml#/$defs/metadata'
      arguments:
        type: array
        items:
          oneOf:
              - type: string
              - type: object
                properties:
                    lfn:
                        type: string
                required:
                  - lfn
                additionalProperties: false
        minItems: 0
      stdin:
        type: object
        properties:
          name:
            type: string
        required:
          - name
        additionalProperties: false
      stdout:
        type: object
        properties:
          name:
            type: string
        required:
          - name
        additionalProperties: false
      stderr:
        type: object
        properties:
          name:
            type: string
        required:
          - name
        additionalProperties: false
      uses:
        type: array
        items:
          type: object
          properties:
            file:
              $ref: '#/$defs/file'
            type:
              $ref: '#/$defs/linkType'
          required:
            - file
            - type

          allOf:
            # a use of type 'input' cannot have the properties
            # 'stageOut' and 'registerReplica'
            - if:
                properties:
                  type:
                    const: input
              then:
                properties:
                  file:
                    $ref: '#/$defs/file'
                  type:
                    const: input
                  optional:
                    type: boolean
                  size:
                    type: string
                  namespace:
                    type: string
                  version:
                    $ref: 'common.yml#/$defs/versionString'
                  executable:
                    type: boolean
                additionalProperties: false

            # a use of type 'output' can have the properties
            # 'stageOut' and 'registerReplica'
            - if:
                properties:
                  type:
                    const: output
              then:
                properties:
                  file:
                    $ref: '#/$defs/file'
                  type:
                    const: output
                  stageOut:
                    type: boolean
                  registerReplica:
                    type: boolean
                  optional:
                    type: boolean
                  size:
                    type: string
                  namespace:
                    type: string
                  version:
                    $ref: 'common.yml#/$defs/versionString'
                  executable:
                    type: boolean
                additionalProperties: false
        minItems: 0

      profiles:
        $ref: '#/$defs/profiles'
      hooks:
        $ref: 'common.yml#/$defs/hooks'
    required:
      - id
      - arguments
      - uses

  job:
    allOf:
      - $ref: '#/$defs/abstractJob'
      - properties:
          name:
            type: string
          namespace:
            type: string
          version:
            $ref: 'common.yml#/$defs/versionString'
        required:
          - name

  dag:
    allOf:
      - $ref: '#/$defs/abstractJob'
      - properties:
          file:
            type: string
        required:
          - file

  dax:
    allOf:
      - $ref: '#/$defs/abstractJob'
      - properties:
          file:
            type: string
        required:
          - file

  # --- parent child dependencies ----------------------------------------------
  parent:
    type: object
    properties:
      id:
        ref: 'common.yml#/$defs/nodeIdString'
      children:
        type: array
        items:
          $ref: 'common.yml#/$defs/nodeIdString'
        minItems: 1
    required:
      - id

# --- dax schema ---------------------------------------------------------------
type: object
properties:
  metadata:
    $ref: 'common.yml#/$defs/metadata'
  pegasus:
    $ref: 'common.yml#/$defs/versionString'
  name:
    $ref: 'common.yml#/$defs/filenameSafeString'
  version:
    $ref: 'common.yml#/$defs/versionString'
  hooks:
    $ref: 'common.yml#/$defs/hooks'
  siteCatalog:
    oneOf:
      - $ref: sc-5.0.yml
      - properties:
          $ref:
            type: string
            format: iri
        required:
          - $ref
  replicaCatalog:
    oneOf:
      - $ref: 'rc-5.0.yml#/$defs/inlineReplicaCatalog'
# for future work if rc becomes reuseable
#      - properties:
#           $ref:
#             type: string
#             format: iri
#        required: [$ref]
  transformationCatalog:
    oneOf:
      - $ref: 'tc-5.0.yml#/$defs/inlineTransformationCatalog'
# for future work if tc becomes reuseable
#      - properties:
#          $ref:
#            type: string
#            format: iri
#        required: [$ref]
  jobs:
    type: array
    items:
      anyOf:
        - $ref: '#/$defs/job'
        - $ref: '#/$defs/dag'
        - $ref: '#/$defs/dax'
    minItems: 1
  jobDependencies:
    type: array
    items:
      $ref: '#/$defs/parent'
    minItems: 0
required:
  - pegasus
  - name
  - jobs
additionalProperties: false
patternProperties:
  ^x-:
    $ref: 'common.yml#/$defs/vendorExtension'
