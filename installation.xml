<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="installation">
  <title>Installation</title>

  <section id="prereqs">
    <title>Prerequisites</title>

    <para>Pegasus has a few dependencies:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Java 1.6 or higher</emphasis>. Check
        with:</para>

        <para><programlisting>$ <emphasis>java -version</emphasis>
java version "1.6.0_07"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.6.0_07-164)
Java HotSpot(TM) Client VM (build 1.6.0_07-87, mixed mode, sharing)</programlisting></para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Python 2.4 or higher</emphasis>. Check
        with:</para>

        <para><programlisting>$ <emphasis>python -v</emphasis>
Python 2.6.2</programlisting></para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Condor 7.4 or higher</emphasis>. See
        h<ulink
        url="ttp://www.cs.wisc.edu/condor/">ttp://www.cs.wisc.edu/condor/</ulink>
        for more information. You should be able to run
        <filename>condor_q</filename> and
        <filename>condor_status</filename>.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Globus 4.0 or higher</emphasis>. See
        <ulink url="http://www.globus.org/">http://www.globus.org/</ulink> for
        more information. Check Globus Installation</para>

        <programlisting>$ <emphasis>echo $GLOBUS_LOCATION</emphasis>
/path/to/globus/install</programlisting>

        <para>Make sure you source the Globus environment</para>

        <para><programlisting>$<emphasis> GLOBUS_LOCATION/etc/globus-user-env.sh</emphasis></programlisting></para>

        <para>Check the setup by running:</para>

        <para><programlisting>$<emphasis> globus-version</emphasis>
5.0.1</programlisting></para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="env">
    <title>Environment</title>

    <para>In order to use Pegasus, just add the bin/ directory to your PATH.
    Example for bourne shells:</para>

    <programlisting>$ <emphasis role="bold">export PATH=/some/install/pegasus-3.0.0/bin:$PATH</emphasis></programlisting>

    <note>
      <para>Pegasus 3.0 is different from previous versions of Pegasus in that
      it does not require PEGASUS_HOME to be set or sourcing of any
      environtment setup scripts.</para>
    </note>
  </section>

  <section id="native_packages">
    <title>Native Packages (RPM/DEB)</title>

    <para>The preferred way to install Pegasus is with native (RPM/DEB)
    packages. Using this packages, Pegasus will be installed into
    <filename>/opt/pegasus/{major_version}.{minor_version}</filename>, and the
    packages have {major_version}.{minor_version} in the package name. This is
    so that you can have multiple Pegasus versions installed at the same time.
    For example, if you installed Pegasus 2.4.3 and 3.0.0, you will end up
    with:</para>

    <programlisting>/opt/pegasus/2.4/
/opt/pegasus/3.0/</programlisting>

    <section id="rhel5">
      <title>RHEL 5 / CentOS 5 / Scientific Linux 5</title>

      <para>Add the Pegasus repository to yum by creating a file named
      <filename>/etc/yum.repos.d/pegasus</filename> with the content:</para>

      <programlisting># Pegasus 3.0
[Pegasus30]
name=Pegasus30
baseurl=http://pegasus.isi.edu/wms/download/3.0/yum/rhel/$releasever/$basearch/
gpgcheck=0
enabled=1</programlisting>

      <para>You should then be able to search for, and install Pegasus:</para>

      <programlisting># <emphasis role="bold">yum search pegasus</emphasis>
pegasus-3.0 : Pegasus Workflow Management System
# <emphasis role="bold">yum install pegasus</emphasis>
Running Transaction
Installing     : pegasus-3.0 

Installed:
pegasus-3.0 :3.0.0-1                                                                                                                        

Complete!</programlisting>
    </section>

    <section id="deb5">
      <title>Debian 5 (Lenny)</title>

      <para>To be able to install and upgrade from the Pegasus apt repository,
      you will have to trust the repository key. You only need to add the
      repository key once.</para>

      <programlisting># <emphasis role="bold">gpg --keyserver keyring.debian.org --recv-keys 81C2A4AC</emphasis>
# <emphasis role="bold">gpg -a --export 81C2A4AC | apt-key add -</emphasis>  </programlisting>

      <para>Add the Pegasus apt repository to your
      <filename>/etc/apt/sources.list</filename> file:</para>

      <programlisting>deb http://pegasus.isi.edu/wms/download/3.0/apt/debian lenny main</programlisting>

      <para>Install Pegasus with apt-get:</para>

      <programlisting># <emphasis role="bold">apt-get update</emphasis>
...
# <emphasis role="bold">apt-get install pegasus-3.0</emphasis></programlisting>
    </section>
  </section>

  <section id="tarballs">
    <title>Pegasus from Tarballs</title>

    <para>The Pegaus prebuild tarballs can be downloaded from the <ulink
    url="http://pegasus.isi.edu/wms/download.php">download
    page</ulink>.</para>

    <section>
      <title id="tarballs_plain">Tarball without Condor</title>

      <para>Use these tarballs if you already have Condor installed or prefer
      to keep the Condor installation separate from the Pegasus
      installation.</para>

      <itemizedlist>
        <listitem>
          <para>Untar the tarball</para>

          <para><programlisting>$ tar zxf pegasus-*.tar.gz</programlisting></para>
        </listitem>

        <listitem>
          <para>include the Pegasus bin directory in your PATH</para>

          <para><programlisting>$ export PATH=/path/to/pegasus-3.0.0:$PATH</programlisting></para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="tarball_condor">
      <title>Tarball with Included Condor</title>

      <para>For convenience, there is Pegasus WMS tarballs which has Condor
      included. This way you can instlal Pegasus and Condor at the same time,
      with just minor configuration to get up and running.</para>

      <itemizedlist>
        <listitem>
          <para>Untar the tarball</para>

          <para><programlisting>$ tar zxf pegasus-wms-*.tar.gz</programlisting></para>
        </listitem>

        <listitem>
          <para>Edit the Condor Configuration file. The configuration file is
          currently configured to run only as a submit side (Runs schedd)
          supporting schedule, local and grid universe. If you want to use it
          for gt4, lsf, pbs or condor-c additional configuration changes may
          be required. Please check the Condor Manual for appropriate
          parameters.</para>

          <para>For now you need to change only 2 parameters. Change
          !!PEGASUS_HOME!! to the actual path where PEGASUS_WMS is installed
          and CHANGE !!USER!! to the user who will receive email in case of
          error. (This can generally be just your username )</para>

          <para><programlisting>$ vim $PEGASUS_HOME/etc/condor_config


RELEASE_DIR = !!PEGASUS_HOME!!    # CHANGE THIS TO PATH OF PEGASUS_WMS INSTALLATION

CONDOR_ADMIN = !!USER!! # CHANGE THIS To THE USER WHO wILL GET EMAIL INCASE OF ERROR.</programlisting></para>
        </listitem>

        <listitem>
          <para>Set up the environment:</para>

          <para><programlisting>$ export PATH=PEGASUS_HOME/bin:PEGASUS_HOME/condor/bin:$PATH
$ export CONDOR_CONFIG=PEGASUS_HOME/etc/condor_config</programlisting></para>
        </listitem>

        <listitem>
          <para>Start Condor by running ./sbin/condor_master</para>

          <para><programlisting>$ ./sbin/condor_master</programlisting></para>
        </listitem>

        <listitem>
          <para>Check if condor is up by running the condor_q command</para>

          <para><programlisting>$ condor_q

-- Submitter: gmehta@smarty.isi.edu : &lt;128.9.72.26:60126&gt; : smarty.isi.edu
 ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD               

0 jobs; 0 idle, 0 running, 0 held</programlisting></para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
</chapter>
