---
version: 2
plan:
  project-key: PEGASUS
  key: BNT50
  name: Build and Test (5.0)
stages:
  - Source Checkout:
      manual: false
      final: false
      jobs:
        - Source checkout and distribution
  - Unit Tests:
      description: Run Unit Tests on Code and Binaries
      manual: false
      final: false
      jobs:
        - RHEL 7 Java Unit Tests
        - Ubuntu 20.04 Java Unit Tests
        - Ubuntu 18.04 Java Unit Tests
        - Ubuntu 20.04 Unit Tests
        - RHEL 7 Unit Tests
        - Ubuntu 20.04 Python Unit Tests
        - Debian 11 Python Unit Tests
        - Ubuntu 18.04 Python Unit Tests
        - Debian 9 Python Unit Tests
        - Alpine 3 Unit Tests
        - Debian 10 Java Unit Tests
        - OSX Unit Tests
        - Alpine 3 Python Unit Tests
        - RHEL 7 Python Unit Tests
        - Debian 10 Unit Tests
        - Alpine 3 Java Unit Tests
        - RHEL 8 Java Unit Tests
        - RHEL 8 Unit Tests
        - Debian 10 Python Unit Tests
        - Debian 9 Unit Tests
        - Debian 9 Java Unit Tests
        - Debian 11 Java Unit Tests
        - Ubuntu 18.04 Unit Tests
        - RHEL 8 Python Unit Tests
        - Debian 11 Unit Tests
  - Lint:
      description: Lint source code
      manual: false
      final: false
      jobs:
        - Python Code Format
        - Java Code Format
  - Build:
      description: Build Pegasus
      manual: false
      final: false
      jobs:
        - Build Alpine 3
        - Build Docs
        - Build OSX
        - Build RHEL 8
        - Build RHEL 7
        - Build Debian 10
        - Build Ubuntu 20.04 LTS
        - Build Debian 9
        - Build Debian 11
        - Build R
        - Build Ubuntu 18.04 LTS
  - Deploy:
      description: Deploy Artifacts
      manual: false
      final: false
      jobs:
        - Deploy Artifacts
  - Container Images:
      description: Build and upload container images
      manual: false
      final: false
      jobs:
        - Tutorial Docker Image
Source checkout and distribution:
  key: DIST
  description: Create the full distribution tarball
  other:
    clean-working-dir: true
  tasks:
    - checkout:
        repository: Pegasus
        path: pegasus-source
        force-clean-build: "true"
        description: Checks the Pegasus code out from our source repository
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            set -e
            set -x

            pwd
            ls -la

            VERSION=`pegasus-source/release-tools/getversion`

            # Make sure it is clean
            (cd pegasus-source && ant clean)

            # basic source tarball
            (cd pegasus-source && ant dist-source && mv dist/pegasus-$VERSION.tar.gz ..)

            # pegasus-source.tar.gz is a tarball which is used to in subsequent buildsteps
            # make this a copy of the generated source tarball to keep everyhing
            # consistent
            (cd pegasus-source/dist && tar xzf ../../pegasus-$VERSION.tar.gz && mv pegasus-$VERSION pegasus-source && tar -czf ../../pegasus-source.tar.gz pegasus-source && rm -rf pegasus-source)

            # Create the source tarball for python source files using setup.py
            (cd pegasus-source && ant dist-python-source && mv dist/pegasus-wms*-*.tar.gz ..)
        description: Create source tarballs
  artifacts:
    - name: pegasus-python-source-versioned
      pattern: pegasus-wms*-*.tar.gz
      shared: true
      required: false
    - name: pegasus-source-versioned
      pattern: pegasus-?.*.tar.gz
      shared: true
      required: false
    - name: pegasus-source
      pattern: pegasus-source.tar.gz
      shared: true
      required: false
  requirements:
    - docbuild: "true"
  artifact-subscriptions: []
RHEL 7 Java Unit Tests:
  key: R7JUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - release: "7"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Ubuntu 20.04 Java Unit Tests:
  key: UTJUF
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - release: "20"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
Ubuntu 18.04 Java Unit Tests:
  key: UTJUB
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - release: "18"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
Ubuntu 20.04 Unit Tests:
  key: UTCUF
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-pmc test-transfer test-integrity
        description: Unit Tests
  requirements:
    - release: "20"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
RHEL 7 Unit Tests:
  key: R7CUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-transfer
        description: Unit Tests
  requirements:
    - release: "7"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Ubuntu 20.04 Python Unit Tests:
  key: UTPUF
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - release: "20"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 11 Python Unit Tests:
  key: D11PUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - distro: debian
    - release: "11"
  artifact-subscriptions:
    - artifact: pegasus-source
Ubuntu 18.04 Python Unit Tests:
  key: UTPUB
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - release: "18"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 9 Python Unit Tests:
  key: D9PUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - release: "9"
    - distro: debian
  artifact-subscriptions:
    - artifact: pegasus-source
Alpine 3 Unit Tests:
  key: A3UT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-transfer
        description: Unit Tests
  requirements:
    - distro: alpine
    - release: "3"
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 10 Java Unit Tests:
  key: D10JUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - distro: debian
    - release: "10"
  artifact-subscriptions:
    - artifact: pegasus-source
OSX Unit Tests:
  key: OCUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            # We need /usr/local/bin because of homebrew
            export PATH=$PATH:/usr/local/bin:/Library/TeX/texbin
            cd pegasus-source
            ant test-kickstart test-transfer
        environment: PATH="${PATH}:/usr/local/bin:/Library/TeX/texbin" LDFLAGS="-L/usr/local/opt/openssl/lib" CPPFLAGS="-I/usr/local/opt/openssl/include"
        description: Unit Tests
  requirements:
    - platform: macos
  artifact-subscriptions:
    - artifact: pegasus-source
Alpine 3 Python Unit Tests:
  key: A3PUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - distro: alpine
    - release: "3"
  artifact-subscriptions:
    - artifact: pegasus-source
RHEL 7 Python Unit Tests:
  key: R7PUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - release: "7"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 10 Unit Tests:
  key: D10CUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-transfer
        description: Unit Tests
  requirements:
    - distro: debian
    - release: "10"
  artifact-subscriptions:
    - artifact: pegasus-source
Alpine 3 Java Unit Tests:
  key: A3JUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - distro: alpine
    - release: "3"
  artifact-subscriptions:
    - artifact: pegasus-source
RHEL 8 Java Unit Tests:
  key: R8JUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - release: "8"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
RHEL 8 Unit Tests:
  key: R8CUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-pmc test-transfer test-integrity
        description: Unit Tests
  requirements:
    - release: "8"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 10 Python Unit Tests:
  key: D10PUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - distro: debian
    - release: "10"
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 9 Unit Tests:
  key: D9CUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-pmc test-transfer
        description: Unit Tests
  requirements:
    - release: "9"
    - distro: debian
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 9 Java Unit Tests:
  key: D9JUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - release: "9"
    - distro: debian
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 11 Java Unit Tests:
  key: D11JUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-java
        description: Java Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/build/tests/classes/junitreport/*.xml
        description: Parse Test Report
  requirements:
    - distro: debian
    - release: "11"
  artifact-subscriptions:
    - artifact: pegasus-source
Ubuntu 18.04 Unit Tests:
  key: UTCUB
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-pmc test-transfer test-integrity
        description: Unit Tests
  requirements:
    - release: "18"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
RHEL 8 Python Unit Tests:
  key: R8PUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-python
        description: Python Unit Tests
    - test-parser:
        type: junit
        ignore-time: "false"
        test-results: pegasus-source/packages/*/test-reports/*.xml
        description: Parse Test Report
  artifacts:
    - name: Coverage Report - Pegasus API
      location: pegasus-source/packages/pegasus-api/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus WMS
      location: pegasus-source/packages/pegasus-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Common
      location: pegasus-source/packages/pegasus-common/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus DAX
      location: pegasus-source/packages/pegasus-dax-python/htmlcov/
      pattern: "*"
      shared: false
      required: false
    - name: Coverage Report - Pegasus Worker
      location: pegasus-source/packages/pegasus-worker/htmlcov/
      pattern: "*"
      shared: false
      required: false
  requirements:
    - release: "8"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Debian 11 Unit Tests:
  key: D11CUT
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant test-kickstart test-transfer
        description: Unit Tests
  requirements:
    - distro: debian
    - release: "11"
  artifact-subscriptions:
    - artifact: pegasus-source
Python Code Format:
  key: PCF
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            TAG=${bamboo_TAG_CENTOS_8}

            /opt/docker/docker-bamboo-wrapper pull pegasus/pegasus:${TAG}

            /opt/docker/docker-bamboo-wrapper run \
            --rm \
            --entrypoint ant \
            --env "USER=bamboo" \
            --env "CI=true" \
            --env "bamboo_buildKey=${bamboo_buildKey}" \
            --volume ${bamboo_build_working_directory}/pegasus-source:/home/bamboo/pegasus-source \
            pegasus/pegasus:${TAG} code-format-python
        description: Python Code Format
  requirements:
    - system.docker.executable
  artifact-subscriptions:
    - artifact: pegasus-source
Java Code Format:
  key: JCF
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            TAG=${bamboo_TAG_CENTOS_8}

            /opt/docker/docker-bamboo-wrapper pull pegasus/pegasus:${TAG}

            /opt/docker/docker-bamboo-wrapper run \
            --rm \
            --entrypoint ant \
            --env "USER=bamboo" \
            --env "CI=true" \
            --env "bamboo_buildKey=${bamboo_buildKey}" \
            --volume ${bamboo_build_working_directory}/pegasus-source:/home/bamboo/pegasus-source \
            pegasus/pegasus:${TAG} code-format-java
        description: Java Code Format
  requirements:
    - system.docker.executable
  artifact-subscriptions:
    - artifact: pegasus-source
Build Alpine 3:
  key: BA3
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_alpine_3
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_alpine_3.tar.gz
      shared: true
      required: false
    - name: pegasus-worker-x86_64_alpine_3
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_alpine_3.tar.gz
      shared: true
      required: false
  requirements:
    - distro: alpine
    - release: "3"
  artifact-subscriptions:
    - artifact: pegasus-source
Build Docs:
  key: DOCGEN
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            TAG=${bamboo_TAG_CENTOS_7}

            /opt/docker/docker-bamboo-wrapper pull pegasus/pegasus:${TAG}

            /opt/docker/docker-bamboo-wrapper run \
            --rm \
            --env "LANG=en_US.utf8" \
            --volume ${bamboo_build_working_directory}/pegasus-source:/home/bamboo/pegasus-source \
            --entrypoint ant \
            pegasus/pegasus:${TAG} \
            dist-doc
        description: Doc Build
  artifacts:
    - name: pegasus-doc
      location: pegasus-source/dist
      pattern: pegasus-doc-*.tar.gz
      shared: true
      required: false
  requirements:
    - system.docker.executable
    - docbuild
  artifact-subscriptions:
    - artifact: pegasus-source
Build OSX:
  key: BXOSX
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.ant:task.builder.ant
        configuration:
          environmentVariables: PATH="${PATH}:/usr/local/bin:/Library/TeX/texbin" LDFLAGS="-L/usr/local/opt/openssl/lib" CPPFLAGS="-I/usr/local/opt/openssl/include"
          testResultsDirectory: "**/test-reports/*.xml"
          buildJdk: JDK
          label: Ant
          testChecked: "false"
          target: dist-worker dist-release
          workingSubDirectory: pegasus-source
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_macos
      location: pegasus-source/dist
      pattern: pegasus-binary-*.tar.gz
      shared: true
      required: false
    - name: pegasus-worker-x86_64_macos
      location: pegasus-source/dist
      pattern: pegasus-worker-*.tar.gz
      shared: true
      required: false
  requirements:
    - release: 10.*
    - platform: macos
    - arch: x86_64
  artifact-subscriptions:
    - artifact: pegasus-source
Build RHEL 8:
  key: BXR8
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant dist-rpm dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_rhel_8
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_rhel_8.tar.gz
      shared: true
      required: false
    - name: pegasus-rpm-x86_64_rhel_8
      location: pegasus-source/dist
      pattern: "*x86_64.rpm"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_rhel_8
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_rhel_8.tar.gz
      shared: true
      required: false
    - name: pegasus-srcrpm
      location: pegasus-source/dist
      pattern: "*.src.rpm"
      shared: true
      required: false
  requirements:
    - release: "8"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Build RHEL 7:
  key: BXR7
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant dist-rpm dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_rhel_7
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_rhel_7.tar.gz
      shared: true
      required: false
    - name: pegasus-rpm-x86_64_rhel_7
      location: pegasus-source/dist
      pattern: "*x86_64.rpm"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_rhel_7
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_rhel_7.tar.gz
      shared: true
      required: false
  requirements:
    - release: "7"
    - distro: centos
  artifact-subscriptions:
    - artifact: pegasus-source
Build Debian 10:
  key: BDEB10
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant clean dist-deb dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_deb_10
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_deb_10.tar.gz
      shared: true
      required: false
    - name: pegasus-deb-x86_64_deb_10
      location: pegasus-source/dist
      pattern: "*.deb"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_deb_10
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_deb_10.tar.gz
      shared: true
      required: false
  requirements:
    - distro: debian
    - release: "10"
  artifact-subscriptions:
    - artifact: pegasus-source
Build Ubuntu 20.04 LTS:
  key: BXUF
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant clean dist-deb dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_ubuntu_20
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_ubuntu_20.tar.gz
      shared: true
      required: false
    - name: pegasus-deb-x86_64_ubuntu_20
      location: pegasus-source/dist
      pattern: "*.deb"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_ubuntu_20
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_ubuntu_20.tar.gz
      shared: true
      required: false
  requirements:
    - release: "20"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
Build Debian 9:
  key: BXDS
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant clean dist-deb dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_deb_9
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_deb_9.tar.gz
      shared: true
      required: false
    - name: pegasus-deb-x86_64_deb_9
      location: pegasus-source/dist
      pattern: "*.deb"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_deb_9
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_deb_9.tar.gz
      shared: true
      required: false
  requirements:
    - release: "9"
    - distro: debian
  artifact-subscriptions:
    - artifact: pegasus-source
Build Debian 11:
  key: BDEB11
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant clean dist-deb dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_deb_11
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_deb_11.tar.gz
      shared: true
      required: false
    - name: pegasus-deb-x86_64_deb_11
      location: pegasus-source/dist
      pattern: "*.deb"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_deb_11
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_deb_11.tar.gz
      shared: true
      required: false
  requirements:
    - distro: debian
    - release: "11"
  artifact-subscriptions:
    - artifact: pegasus-source
Build R:
  key: BR
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.ant:task.builder.ant
        configuration:
          testResultsDirectory: "**/test-reports/*.xml"
          buildJdk: JDK
          label: Ant
          testChecked: "false"
          target: dist-r
          workingSubDirectory: pegasus-source
        description: Build R DAX Package
  artifacts:
    - name: pegasus-r-pegasus
      location: pegasus-source/dist
      pattern: pegasus-r-pegasus*.tar.gz
      shared: true
      required: false
  requirements:
    - docbuild
  artifact-subscriptions:
    - artifact: pegasus-source
Build Ubuntu 18.04 LTS:
  key: BXUB
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - tar xzf pegasus-source.tar.gz
        description: Untar source
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            cd pegasus-source
            ant clean dist-deb dist-worker dist-release
        description: Binary Packages
  artifacts:
    - name: pegasus-binary-x86_64_ubuntu_18
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_ubuntu_18.tar.gz
      shared: true
      required: false
    - name: pegasus-deb-x86_64_ubuntu_18
      location: pegasus-source/dist
      pattern: "*.deb"
      shared: true
      required: false
    - name: pegasus-worker-x86_64_ubuntu_18
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_ubuntu_18.tar.gz
      shared: true
      required: false
  requirements:
    - release: "18"
    - distro: ubuntu
  artifact-subscriptions:
    - artifact: pegasus-source
Deploy Artifacts:
  key: DA
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            set -e
            set -x

            echo
            echo "Available artifacts are:"
            ls -lh
            echo

            tar xzf pegasus-source.tar.gz
            VERSION=`./pegasus-source/release-tools/getversion`
            if [ "X$VERSION" = "X" ]; then
                echo "Unable to determine Pegasus version! Exiting..."
                exit 1
            fi

            mkdir -p docs
            tar xzf pegasus-doc-*.tar.gz -C docs

            DOWNLOADS=pegasus/$VERSION
            mkdir -p $DOWNLOADS
            mv pegasus-5*.tar.gz $DOWNLOADS/
            mv pegasus-wms*-*.tar.gz $DOWNLOADS/
            mv pegasus-binary-*.tar.gz $DOWNLOADS/
            mv pegasus-worker-*.tar.gz $DOWNLOADS/
            mv pegasus-doc-*.tar.gz $DOWNLOADS/
            mv *.deb $DOWNLOADS/
            mv *.rpm $DOWNLOADS/
            mv pegasus-r-pegasus*.tar.gz $DOWNLOADS/

            # debian
            mkdir -p $DOWNLOADS/debian/dists/stretch/main/binary-amd64
            cp $DOWNLOADS/pegasus_*deb9_amd64.deb $DOWNLOADS/debian/dists/stretch/main/binary-amd64/
            mkdir -p $DOWNLOADS/debian/dists/buster/main/binary-amd64
            cp $DOWNLOADS/pegasus_*deb10_amd64.deb $DOWNLOADS/debian/dists/buster/main/binary-amd64/
            mkdir -p $DOWNLOADS/debian/dists/bullseye/main/binary-amd64
            cp $DOWNLOADS/pegasus_*deb11_amd64.deb $DOWNLOADS/debian/dists/bullseye/main/binary-amd64/

            # ubuntu
            mkdir -p $DOWNLOADS/ubuntu/dists/bionic/main/binary-amd64
            cp $DOWNLOADS/pegasus_*ubuntu18_amd64.deb $DOWNLOADS/ubuntu/dists/bionic/main/binary-amd64/
            mkdir -p $DOWNLOADS/ubuntu/dists/focal/main/binary-amd64
            cp $DOWNLOADS/pegasus_*ubuntu20_amd64.deb $DOWNLOADS/ubuntu/dists/focal/main/binary-amd64/

            # rhel
            mkdir -p $DOWNLOADS/rhel/src
            cp $DOWNLOADS/pegasus-*.src.rpm $DOWNLOADS/rhel/src/
            mkdir -p $DOWNLOADS/rhel/7/x86_64
            cp $DOWNLOADS/pegasus-*el7.x86_64.rpm $DOWNLOADS/rhel/7/x86_64/
            mkdir -p $DOWNLOADS/rhel/8/x86_64
            cp $DOWNLOADS/pegasus-*el8.x86_64.rpm $DOWNLOADS/rhel/8/x86_64/

            # standard filenames for RPMs - used by tutorial VM
            cd pegasus/$VERSION
            if [ ! -e pegasus-$VERSION-1.el7.x86_64.rpm ]; then
                cp pegasus-*el7.x86_64.rpm pegasus-$VERSION-1.el7.x86_64.rpm
            fi
            if [ ! -e pegasus-$VERSION-1.el8.x86_64.rpm ]; then
                cp pegasus-*el8.x86_64.rpm pegasus-$VERSION-1.el8.x86_64.rpm
            fi
            # standard filesnames for DEBs
            for TIMESTAMPED in `ls *dev20*.deb`; do
                SIMPLE=`echo $TIMESTAMPED | sed -E 's/dev20[0-9]+/dev/'`
                if [ ! -e $SIMPLE ]; then
                    cp $TIMESTAMPED $SIMPLE
                fi
            done
            cd ../..

            # no files should be left behind
            ls -l

            scp -i ~/.ssh/deployment -r $DOWNLOADS download.pegasus.isi.edu:/srv/download.pegasus.isi.edu/public_html/pegasus/

            # new wordpress site
            ssh -i ~/.ssh/deployment pegasus.isi.edu "mkdir -p /srv/pegasus.isi.edu/public_html/docs/$VERSION"
            scp -i ~/.ssh/deployment -r docs/pegasus-*/share/doc/pegasus/wordpress/* pegasus.isi.edu:/srv/pegasus.isi.edu/public_html/docs/$VERSION/
        description: Organize artifacts for upload
  requirements:
    - hostname: build-1.pegasus.isi.edu
  artifact-subscriptions:
    - artifact: pegasus-worker-x86_64_deb_11
    - artifact: pegasus-deb-x86_64_deb_11
    - artifact: pegasus-binary-x86_64_deb_11
    - artifact: pegasus-worker-x86_64_alpine_3
    - artifact: pegasus-binary-x86_64_alpine_3
    - artifact: pegasus-worker-x86_64_ubuntu_20
    - artifact: pegasus-deb-x86_64_ubuntu_20
    - artifact: pegasus-binary-x86_64_ubuntu_20
    - artifact: pegasus-binary-x86_64_rhel_8
    - artifact: pegasus-rpm-x86_64_rhel_8
    - artifact: pegasus-worker-x86_64_rhel_8
    - artifact: pegasus-binary-x86_64_deb_9
    - artifact: pegasus-binary-x86_64_macos
    - artifact: pegasus-binary-x86_64_rhel_7
    - artifact: pegasus-binary-x86_64_ubuntu_18
    - artifact: pegasus-deb-x86_64_deb_9
    - artifact: pegasus-deb-x86_64_ubuntu_18
    - artifact: pegasus-doc
    - artifact: pegasus-python-source-versioned
    - artifact: pegasus-r-pegasus
    - artifact: pegasus-rpm-x86_64_rhel_7
    - artifact: pegasus-source
    - artifact: pegasus-source-versioned
    - artifact: pegasus-srcrpm
    - artifact: pegasus-worker-x86_64_deb_9
    - artifact: pegasus-worker-x86_64_macos
    - artifact: pegasus-worker-x86_64_rhel_7
    - artifact: pegasus-worker-x86_64_ubuntu_18
    - artifact: pegasus-binary-x86_64_deb_10
    - artifact: pegasus-deb-x86_64_deb_10
    - artifact: pegasus-worker-x86_64_deb_10
Tutorial Docker Image:
  key: TDI
  other:
    clean-working-dir: true
  tasks:
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |
            set -e
            set -x

            tar xzf pegasus-source.tar.gz
            VERSION=`./pegasus-source/release-tools/getversion`
            if [ "X$VERSION" = "X" ]; then
                echo "Unable to determine Pegasus version! Exiting..."
                exit 1
            fi

            cd pegasus-source
            ant tutorial-image-build

            docker push pegasus/tutorial:$VERSION
        description: Builds and uploads a tutorial image to DockerHub
  artifacts:
    - name: pegasus-binary-x86_64_deb_10
      location: pegasus-source/dist
      pattern: pegasus-binary-*-x86_64_deb_10.tar.gz
      shared: false
      required: false
    - name: pegasus-deb-x86_64_deb_10
      location: pegasus-source/dist
      pattern: "*.deb"
      shared: false
      required: false
    - name: pegasus-worker-x86_64_deb_10
      location: pegasus-source/dist
      pattern: pegasus-worker-*-x86_64_deb_10.tar.gz
      shared: false
      required: false
  requirements:
    - hostname: build-1.pegasus.isi.edu
    - system.docker.executable
  artifact-subscriptions:
    - artifact: pegasus-source
variables:
  TAG_CENTOS_7: centos7
  TAG_CENTOS_8: centos8
  TAG_DEBIAN_10: buster
  TAG_DEBIAN_11: bullseye
  TAG_DEBIAN_9: stretch
  TAG_UBUNTU_18: bionic
  TAG_UBUNTU_20: focal
repositories:
  - Pegasus:
      type: git
      url: https://github.com/pegasus-isi/pegasus.git
      branch: "5.0"
      command-timeout-minutes: "180"
      lfs: "false"
      verbose-logs: "false"
      use-shallow-clones: "false"
      cache-on-agents: "false"
      submodules: "false"
      fetch-all: "false"
triggers:
  - cron:
      expression: 0 0 21 * * ?
      description: Nightly Build
  - polling:
      period: "300"
      description: Repository Polling
branches:
  create: manually
  delete: never
  link-to-jira: true
notifications:
  - events:
      - job-hung
    recipients:
      - emails:
          - pegasus-svn@isi.edu
  # Notification recipient com.atlassian.bamboo.plugins.bamboo-slack:recipient.slack is not supported yet
  - events:
      - plan-failed
    recipients:
      - emails:
          - pegasus-svn@isi.edu
# Notification recipient com.atlassian.bamboo.plugins.bamboo-slack:recipient.slack is not supported yet
labels: []
other:
  concurrent-build-plugin: system-default
# Some plugin configurations are not supported by YAML Specs
---
version: 2
plan:
  key: PEGASUS-BNT50
plan-permissions:
  - users:
      - mayani
    permissions:
      - admin
  - groups:
      - ccg-users
    permissions:
      - view
      - build
  - roles:
      - logged-in
      - anonymous
    permissions:
      - view
