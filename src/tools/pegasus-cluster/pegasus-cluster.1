.\"
.\" This file or a portion of this file is licensed under the terms of
.\" the Globus Toolkit Public License, found in file GTPL, or at
.\" http://www.globus.org/toolkit/download/license.html. This notice must
.\" appear in redistributions of this file, with or without modification.
.\"
.\" Redistributions of this Software, with or without modification, must
.\" reproduce the GTPL in: (1) the Software, or (2) the Documentation or
.\" some other similar material which is provided with the Software (if
.\" any).
.\"
.\" Copyright 1999-2004 University of Chicago and The University of
.\" Southern California. All rights reserved.
.\"
.\" $Id$
.\"
.\" Authors: Jens-S. VÃ¶ckler
.\"
.\"
.TH "seqexec" "1" "3.0.0" "Pegasus"
.SH "NAME"
seqexec \- run a bunch of applications
.SH "SYNTAX"
.B seqexec [\-d] [\-f [\-S\~ec]] [\-s\~fn] [\-R\~fn] [\-n\~nr] [inputfile]
.SH "DESCRIPTION"
The 
.B seqexec
tool executes a list of application in the order specified. It
is generally used to do horizontal clustering of independent
application, and does not care about any application failures.
Such failures should be caught by using
.B kickstart
to start application. In vertical clustering mode, the 
.I hard failure
mode is encouraged, ending execution as soon as one application
fails. When running a complex workflow through 
.BR seqexec ,
the order of applications must be topologically sorted.
.PP
Applications are usually using
.B kickstart
to execute. In the
.B kickstart 
case, all invocations of 
.B kickstart
except the first should add the 
.B kickstart
option
.I \-H
to supress repeating the XML preamble. 
.PP
.B seqexec
permits shell-style quoting. One level of quoting is removed from the 
arguments. Please note that 
.B kickstart
will also remove one level of quoting. 
.SH "ARGUMENTS"
.TP
.B \-d
This option increases the debug level. Debug message are generated on 
.IR stdout .
.IP
By default, debugging is minimal.
.TP
.B \-f
In hard failure mode, as soon as one application fails, either through
a non-zero exit code, or by dying on a signal, further execution is
stopped. 
.IP
In parallel execution mode, one or more other applications later in the 
sequence file may have been started already by the time failure is
detected. 
.B Seqexec
will wait for the completion of these applications, but not start new ones. 
.IP
By default, all applications are executed regardless of failures. 
.TP
.B \-h
This option prints the help message and exits the program.
.TP
.B \-s fn
This option will send protocol message (for Mei) to the specified
file. 
.IP
By default, all message are written to 
.IR stdout .
.TP
.B \-R fn
The progress reporting feature, if turned on, will write one event
record whenever an application is started, and one event record whenever
an application finished. This is to enable tracking of jobs in progress.
.IP
By default, track logs are not written, unless the environment
variable
.I SEQEXEC_PROGRESS_REPORT
is set. If set, progress reports are appended to the file pointed
to by the environment variable. 
.TP
.B \-S ec
This option is a multi-option, which may be used multiple times. For
each given non-zero exit-code of an application, mark it as a form
of success. In 
.B \-f
mode, this means that 
.B seqexec
will not fail when seeing this exit code from any application it runs. 
.IP
By default, all non-zero exit code constitute failure. 
.TP
.B \-n nr
This option determines the amount of parallel execution. Typically, 
parallel execution is only recommended on multi-core systems, and 
must be deployed rather carefully, i.e. only completely independent
jobs across of whole
.I inputfile
should ever be attempted to be run in parallel.
.IP
The argument 
.B nr
is the number of parallel jobs that should be used. In addition to
a non-negative integer, the word
.I auto
is also understood. When
.I auto
is specified, 
.B seqexec
will attempt to automatically determine the number of cores 
available in the system.
.IP 
Strictly sequential execution, as if
.I nr
was 1, is the default. If the environment variable
.I SEQEXEC_CPUS
is set, it will determine the default number of CPUs. 
.TP
.B inputfile
The input file specifies a list of application to run, one per line. 
Comments and empty lines are permitted. The comment character is the
octothorpe (#), and extends to the end of line. 
.IP
By default, 
.B seqexec
uses
.I stdin
to read the list of applications to execute. 
.SH "RETURN VALUE"
The
.B seqexec
tool returns 1, if an illegal option was used. It returns 2, if the
status file from option
.B \-s
cannot be opened. It returns 3, if the input file cannot be opened. 
It does
.I not
return any failure for failed applications, except in hard failure mode,
where it will return 5 for true failure. The latter is modified by the
.B \-S 
option. 
.PP
All other internal errors being absent, 
.B seqexec
will always return 0 when run without
.BR \-f . 
Unlike shell, it will 
.I not
return the last application's exit code. 
However, in 
.B \-f
mode, 
.B seqexec
returns either 0 if all main sequence applications succeeded, or
5 if one failed; or more than one in parallel execution mode. 
.PP
The 
.B seqexec 
application will also create a small summary on 
.I stdout
for each job, and one for itself, about the success and failure. The
field
.B failed
reports any exit code that was not zero or a signal of death
termination. It does 
.I not 
include non-zero exit codes that were marked as success using the
.B \-S
option.
.SH "TASK SUMMARY"
Each task executed by 
.B seqexec
generates a record bracketed by square brackets like this (each entry
is broken over two lines for readability): 
.nf
\f(CB
[seqexec-task id=1, start="2011-04-27T14:31:25.340-07:00", duration=0.521,
 status=0, line=1, pid=18543, app="/bin/usleep"]
[seqexec-task id=2, start="2011-04-27T14:31:25.342-07:00", duration=0.619,
 status=0, line=2, pid=18544, app="/bin/usleep"]
[seqexec-task id=3, start="2011-04-27T14:31:25.862-07:00", duration=0.619,
 status=0, line=3, pid=18549, app="/bin/usleep"]
\fP
.fi
.PP
Each record is introduced by the string
.I seqexec-task
with the following constituents, where strings are quoted:  
.TP
.B id
This is a numerical value for main sequence application, indicating the
application's place in the sequence file. The setup task uses the string
.IR setup ,
and the cleanup task uses the string 
.IR cleanup . 
.TP
.B start
is the ISO 8601 time stamp, with millisecond resolution, when the
application was started. This string is quoted. 
.TP
.B duration
is the application wall-time duration in seconds, with millisecond
resolution.
.TP
.B status
is the
.I raw
exit status as returned by the 
.I wait
family of system calls. Typically, the exit code is found in the high
byte, and the signal of death in the low byte. Typically, 0 indicates
a successful execution, and any other value a problem. However, details
could differ between systems, and exit codes are only meaningful on the
same os and architecture.
.TP
.B line 
is the line number where the task was found in the main sequence file.
Setup- and cleanup tasks don't have this attribute. 
.TP
.B pid
is the process id under which the application had run. 
.TP
.B app
is the path to the application that was started. As with the progress
record, any 
.B kickstart
will be parsed out so that you see the true application. 
.SH "SEQEXEC SUMMARY"
The final summary of counts is a record bracketed by square brackets
like this (broken over two lines for readability):
.nf
\f(CB
[seqexec-summary stat="ok", lines=3, tasks=3, succeeded=3, failed=0, extra=0,
 duration=1.143, start="2011-04-27T14:31:25.338-07:00", pid=18542, app="./seqexec"]
\fP
.fi
.PP
The record is introduced by the string
.I seqexec-summary
with the following constituents: 
.TP
.B stat
The string
.I fail
in 
.B \-f 
mode when a failure occurred. Otherwise, it will always be the string
.IR ok ,
if the record is produced. 
.TP
.B lines
is the stopping line number of the input sequence file, indicating 
how far processing got. Up to the number of cores additional lines
may have been parsed in case of
.B \-f
mode. 
.TP
.B tasks
is the number of tasks processed. 
.TP
.B succeeded
is the number of main sequence jobs that succeeded.
.TP
.B failed
is the number of main sequence jobs that failed. The failure condition
depends on the
.B \-S
settings, too. 
.TP
.B extra
is 0, 1 or 2, depending on the existence of setup- and cleanup jobs. 
.TP
.B duration 
is the duration in seconds, with millisecond resolution, how long 
.B seqexec
ran. 
.TP
.B start
is the start time of 
.B seqexec
as ISO 8601 time stamp. 
.SH "SEE ALSO"
.BR kickstart (1).
.SH "CAVEATS"
The
.B \-S
option sets success codes globally. It is not possible to activate success codes
only for one specific application, and doing so would break the shell compatibility. 
Due to the global nature, use success codes sparingly as last resort emergency 
handler. In better plannable environments, you should use an application wrapper
instead.
.SH "EXAMPLE"
The following shows an example input file to
.B seqexec
making use of 
.B kickstart
to track applications. 
.nf
\f(CB
#
# mkdir
/path/to/kickstart -R HPC -n mkdir /bin/mkdir -m 2755 -p split-corpus split-ne-corpus
#
# drop-dian
/path/to/kickstart -H -R HPC -n drop-dian -o '^f-new.plain' /path/to/drop-dian /path/to/f-tok.plain /path/to/f-tok.NE
#
# split-corpus
/path/to/kickstart -H -R HPC -n split-corpus /path/to/split-seq-new.pl 23 f-new.plain split-corpus/corpus.
#
# split-corpus
/path/to/kickstart -H -R HPC -n split-corpus /path/to/split-seq-new.pl 23 /path/to/f-tok.NE split-ne-corpus/corpus.
\fP
.fi
.PP
.SH "ENVIRONMENT VARIABLES"
A number of environment variables permits to influence the behavior of 
.B seqexec
during run-time. 
.TP
.B SEQEXEC_PROGRESS_REPORT
If this variable is set, and points to a writable file location,
progress report records are appended to the file. While care is
taken to atomically append records to the log file, in case 
concurrent instances of
.B seqexec
are running, broken Linux NFS may still garble some content. 
.TP
.B SEQEXEC_CPUS
If this variable is set to a non-negative integer, that many CPUs are
attempted to be used. The special value
.I auto
permits to auto-detect the number of CPUs available to 
.B seqexec
on the system.
.TP
.B SEQEXEC_SETUP
If this variable is set, and contains a single fully-qualified path
to an executable and arguments, this executable will be run before 
any jobs are started. The exit code of this setup job will have no
effect upon the main job sequence. Success or failure will not be
counted towards the summary. 
.TP
.B SEQEXEC_CLEANUP
If this variable is set, and contains a single fully-qualified path
to an executable and arguments, this executable will be before 
.B seqexec
quits. Failure of any previous job will have no effect on the ability 
to run this job. The exit code of the cleanup job will have no effect 
on the overall success or failure state. Success or failure will not be
counted towards the summary. 
.SH "AUTHORS"
Jens-S. VÃ¶ckler <voeckler at isi dot edu>
.PP
Pegasus
.B http://pegasus.isi.edu/
