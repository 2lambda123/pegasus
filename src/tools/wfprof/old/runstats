#!/usr/bin/env python
#
#  Copyright 2009 University Of Southern California
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

"""Parses the output of kickstart and produces summary runtime statistics."""

__author__ = "Gideon Juve <juve@usc.edu>"
__all__ = []
__version__ = "1.0"

import sys, os, re
from stats import Variable
from analysis import Analysis

class Statistic:
	def __init__(self,name):
		self.name = name
		self.runtime = Variable()
	
	def write(self):
		print "%s,%s" % (self.name,self.runtime)

class RunAnalysis(Analysis):
	def __init__(self):
		self.xforms = {}
		self.file_re = re.compile("\.out(\.[0-9]{3})?$")
		self.regex = re.compile("^.* duration=\"([\.0-9]*)\" transformation=\"([_A-Za-z0-9:\.]*)\" .*$")		

	def print_stats(self):
		print ",runtime"
		print "transformation,count,min,max,avg,stddev,sum"
		for xfn in self.xforms:
			xform = self.xforms[xfn]
			xform.write()

	def is_datafile(self,file):
		return self.file_re.search(file) is not None

	def process_datafile(self,file):
		f = open(file,'r')
		for line in f.readlines():
			match = self.regex.match(line)
			if match:
				xform_name = match.group(2)
				runtime = float(match.group(1))
		
				# Update transformation stats
				if xform_name in self.xforms:
					xform = self.xforms[xform_name]
				else:
					xform = Statistic(xform_name)
					self.xforms[xform_name] = xform
				xform.runtime.update(runtime)
		f.close()


if __name__ == '__main__':
	RunAnalysis().analyze()
