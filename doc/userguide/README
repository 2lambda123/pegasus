
Automated generation of VDS User Guide

We use MS-Word as the document writing and editing application for the
User Guide. A set of shell scripts is used to generate the basic HTML
documents. This gives us: the ability to edit each chapter as a
separate file; a single "stylesheet" for paragraph styles in the form
of a document template; and the ability to (eventually) do various
transformations on the Word files as xml docs.

Rather than using a Word "master" document to order the chapters of
the guide, we employ a simple text file (containing a list of
chapters, one per line) for this purpose, and generate a master .doc
file from this text file.

The chapter list consist of one line per chapter, with the "base" name
of each chapter file (minus the "VDSUG_" prefix and the ".doc"
suffix). A line consisting of a single "#" character separates the
"front matter" chapters from the "numbered" chapters.  (A similar
provision will be needed, eventually, for ending sections such as
Glossary or Index, which are not yet provided in the User Guide).

The derived documents are generated in sub-directories to avoid
potential damage to the original Word docs from unforseen interactions
with Word.

Files involved:

  VDSUGTemplate.dot - contains styles, and two Word macros
  chapterlist_html - chapter list for the HTML user guide (file-per-chapter)
  chapterlist_book - chapter list for the PDF, Word, and HTML all-in-ones
  genhtml.sh - main script to generate the HTML file-per-chapter doc
  genmaster.sh - creates a Word master doc from the simple text chapter list
  setchap.sh - sets the chapter number correctly (else all chapters are "1")
  setwordtemplate.sh - sets the "attached template doc" to VDSUGTemplate.dot
  VDSUG_MasterTemplate.xml - near-empty Word doc used to build the Master file

Note that in each VDSUG_*.xml file, the "Attached Template" field needs to be set (to anything?) so that the correct local Word temoate .dot file can be set by the document genartion scripts.

The main doc generation scripts are:
  genhtml.sh
  genpdfbook.sh (not yet developed - will be created by adapting genhtml.sh)

The directory structure here is:

  userguide
    primary document files (.doc, .dot)
    tools
    html - temp dir to make html version
    msword - ditto for word version
    pdf - ditto for pdf version

TODO:

Create a makefile to do all the doc generation (this should eliminate
the need to cd/cp to a subdir in gen*.sh)

Check if cross-references need to be adjusted (surely they do!)

Perform all Word work via Perl automation, on a Word "control" without using a display.

Make sure Word does not prompt if the default printer (for the doc???) is not available.  May need to scrub the input XML files to remove printer references???

Make sure Word does not get hun on other prompts.

Put in navigation for the HTM web pages - not sure how to do - perhaps via frames?

Do all the work in a subdir of Userguide to avoid any damageto the
original files.

Find way to invoke Word thats indepdent of a fixed pathname (currently
hardcoded in genhml.sh - should come for free when we user Perl OLE)


