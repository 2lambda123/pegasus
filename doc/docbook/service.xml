<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="service">
    <title>Pegasus Service</title>
    <section>
        <title>Service Administration</title>

        <section>
            <title>Service Configuration</title>

            <simpara>The configuration file is $HOME/.pegasus/service.py. Look in
            lib/pegasus/python/pegasus/service/defaults.py for the variable names and
            default values.</simpara>

            <simpara>You can change the host and port of the service by setting the SERVER\_HOST
            and SERVER\_PORT variables.</simpara>

            <simpara>All clients that connect to the web API will require the USERNAME and
            PASSWORD settings in the configuration file.</simpara>
        </section>

        <section>
            <title>Service Database Administration</title>

            <simpara>The <literal>pegasus-service-admin</literal> script is used to
            administer the service.</simpara>

            <simpara>You can set the SQLAlchemy database URI in the configuration
            file. The <literal>pegasus-service-admin</literal> script needs direct
            access to the database (it does not go through the service).</simpara>
            <simpara>To add tables to the database run:</simpara>
            <literallayout class="monospaced">$ pegasus-service-admin create</literallayout>
            <simpara>To add a new user run:</simpara>
            <literallayout class="monospaced">$ pegasus-service-admin useradd USERNAME EMAIL</literallayout>
            <simpara>Where USERNAME is the desired username and EMAIL is the user&#8217;s email address.
            It will prompt you for the new user&#8217;s password.</simpara>
        </section>

        <section>
            <title>Running the Service</title>
            <simpara>Once the service is installed (normally or in development mode) and
            configured you can start the server by running:</simpara>
            <literallayout class="monospaced">$ pegasus-service-server</literallayout>
            <simpara>By default, the server will start on <ulink url="http://localhost:5000">http://localhost:5000</ulink>. You can set
            the host and port in the configuration file.</simpara>
        </section>
    </section>

    <section>
        <title>Dashboard</title>

        <para>TBD</para>

    </section>

    <section>
        <title>Ensemble Manager</title>

        <simpara>The ensemble manager is a service that manages collections of workflows
        called ensembles. The ensemble manager is useful when you have a set of
        workflows you need to run over a long period of time. It can throttle
        the number of concurrent planning and running workflows, and plan and
        run workflows in priority order. A typical use-case is a user with 100
        workflows to run, who needs no more than one to be planned at a time,
        and needs no more than two to be running concurrently.</simpara>

        <simpara>The ensemble manager also allows workflows to be submitted and monitored
        programmatically through its RESTful interface, which makes it an ideal
        platform for integrating workflows into larger applications such as
        science gateways and portals.</simpara>

        <simpara>The ensemble manager requires Pegasus and Condor. It will start
        automatically when pegasus-service-server is started if Pegasus and Condor
        are found in the server&#8217;s PATH, or if the PEGASUS\_HOME and CONDOR\_HOME
        settings are specified correctly in the configuration file.</simpara>

        <simpara>Once the ensemble manager is running, you can create an ensemble with:</simpara>

        <literallayout class="monospaced">$ pegasus-service-ensemble create -e "myruns"</literallayout>

        <simpara>where "myruns" is the name of the ensemble.</simpara>

        <simpara>Before submitting workflows to the ensemble you must upload replica,
        site, and transformation catalogs:</simpara>

        <literallayout class="monospaced">$ pegasus-service-catalog upload -t replica -n "replicas" -F regex -f rc.txt
        $ pegasus-service-catalog upload -t site -n "sites" -F xml -f sites.xml
        $ pegasus-service-catalog upload -t transformation -n "xforms" -F text -f tc.txt</literallayout>

        <simpara>Then you can submit a workflow to the ensemble using the previously uploaded
        catalogs:</simpara>

        <literallayout class="monospaced">$ pegasus-service-ensemble submit -e "myruns" -w "run1" -d run1.dax -R replicas \
        -S sites -T xforms -s local -o local -c pegasus.properties</literallayout>

        <simpara>To check the status of your ensembles run:</simpara>

        <literallayout class="monospaced">$ pegasus-service-ensemble ensembles</literallayout>

        <simpara>To check the status of your workflows run:</simpara>

        <literallayout class="monospaced">$ pegasus-service-ensemble workflows -e "myruns"</literallayout>

        <simpara>For more information about the ensemble manager see the user guide.</simpara>
    </section>

</chapter>
