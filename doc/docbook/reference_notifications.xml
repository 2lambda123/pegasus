<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="notifications">
  <title>Notifications</title>

  <para>The Pegasus Workflow Mapper now supports job and workflow level
  notifications. You can specify in the DAX with the job or the
  workflow</para>

  <itemizedlist>
    <listitem>
      <para>the event when the notification needs to be sent</para>
    </listitem>

    <listitem>
      <para>the executable that needs to be invoked.</para>
    </listitem>
  </itemizedlist>

  <para>The notifications are issued from the submit host by the
  pegasus-monitord daemon that monitors the Condor logs for the workflow. When
  a notification is issued, pegasus-monitord while invoking the notifying
  executable sets certain environment variables that contain information about
  the job and workflow state.</para>

  <para>The Pegasus release comes with default notification clients that send
  notifications via email or jabber.</para>

  <section>
    <title>Specifying Notifications in the DAX</title>

    <para>Currently, you can specify notifications for the jobs and the
    workflow by the use of invoke elements.</para>

    <para>Invoke elements can be sub elements for the following elements in
    the DAX schema.<itemizedlist>
        <listitem>
          <para>job - to associate notifications with a compute job in the
          DAX.</para>
        </listitem>

        <listitem>
          <para>dax - to associate notifications with a dax job in the
          DAX.</para>
        </listitem>

        <listitem>
          <para>dag - to associate notifications with a dag job in the
          DAX.</para>
        </listitem>

        <listitem>
          <para>executable - to associate notifications with a job that uses a
          particular notification</para>
        </listitem>
      </itemizedlist></para>

    <para>The invoke element can be specified at the root element level of the
    DAX to indicate workflow level notifications.</para>

    <para>The invoke element may be specified multiple times, as needed. It
    has a mandatory <emphasis role="bold">when</emphasis> attribute with the
    following value set</para>

    <table id="notification_conditions_table">
      <title>Table 1. Invoke Element attributes and meaning.</title>

      <tgroup cols="2">
        <thead>
          <row>
            <entry align="center">Enumeration of Values for when
            attribute</entry>

            <entry align="center">Meaning</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>never</entry>

            <entry>(default). Never notify of anything. This is useful to
            temporarily disable an existing notifications.</entry>
          </row>

          <row>
            <entry>start</entry>

            <entry>create a notification when the job is submitted.</entry>
          </row>

          <row>
            <entry>on_error</entry>

            <entry>after a job finishes with failure (exitcode != 0).</entry>
          </row>

          <row>
            <entry>on_success</entry>

            <entry>after a job finishes with success (exitcode == 0).</entry>
          </row>

          <row>
            <entry>at_end</entry>

            <entry>after a job finishes, regardless of exitcode.</entry>
          </row>

          <row>
            <entry>all</entry>

            <entry>like start and at_end combined.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>You can specify multiple invoke elements corresponding to same when
    attribute value in the DAX. This will allow you to have multiple
    notifications for the same event.</para>

    <para>Here is an example that illustrates that.</para>

    <programlisting>&lt;job id="ID000001" namespace="example" name="mDiffFit" version="1.0" 
       node-label="preprocess" &gt;
    &lt;argument&gt;-a top -T 6  -i &lt;file name="f.a"/&gt;  -o &lt;file name="f.b1"/&gt;&lt;/argument&gt;

    &lt;!-- profiles are optional --&gt;
    &lt;profile namespace="execution" key="site"&gt;isi_viz&lt;/profile&gt;
    &lt;profile namespace="condor" key="getenv"&gt;true&lt;/profile&gt;

    &lt;uses name="f.a" link="input"  register="false" transfer="true" type="data" /&gt;
    &lt;uses name="f.b" link="output" register="false" transfer="true" type="data" /&gt;
    
    &lt;!-- 'WHEN' enumeration: never, start, on_error, on_success, on_end, all --&gt;
    <emphasis role="bold">&lt;invoke when="start"&gt;/path/to/notify1 arg1 arg2&lt;/invoke&gt;
    &lt;invoke when="start"&gt;/path/to/notify1 arg3 arg4&lt;/invoke&gt;
    &lt;invoke when="on_success"&gt;/path/to/notify2 arg3 arg4&lt;/invoke&gt;</emphasis>
  &lt;/job&gt;</programlisting>

    <para>In the above example the executable notify1 will be invoked twice
    when a job is submitted ( when="start" ), once with arguments arg1 and
    arg2 and second time with arguments arg3 and arg4.</para>

    <para>The DAX Generator API <link
    linkend="dax_generator_api">chapter</link> has information about how to
    add notifications to the DAX using the DAX api's.</para>
  </section>

  <section id="pegasus_notify_file">
    <title>Notify File created by Pegasus in the submit directory.</title>

    <para>Pegasus while planning a workflow writes out a notify file in the
    submit directory that contains all the notifications that need to be sent
    for the workflow. pegasus-monitord picks up this notifications file to
    determine what notifications need to be sent and when.</para>

    <orderedlist>
      <listitem>
        <para>ENTITY_TYPE ID NOTIFICATION_CONDITION ACTION</para>

        <itemizedlist>
          <listitem>
            <para>ENTITY_TYPE can be either of the following keywords</para>

            <itemizedlist>
              <listitem>
                <para>WORKFLOW - indicates workflow level notification</para>
              </listitem>

              <listitem>
                <para>JOB - indicates notifications for a job in the
                executable workflow</para>
              </listitem>

              <listitem>
                <para>DAXJOB - indicates notifications for a DAX Job in the
                executable workflow</para>
              </listitem>

              <listitem>
                <para>DAGJOB - indicates notifications for a DAG Job in the
                executable workflow</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para>ID indicates the identifier for the entity. It has different
            meaning depending on the entity type - - </para>

            <itemizedlist>
              <listitem>
                <para>workflow - ID is wf_uuid </para>
              </listitem>

              <listitem>
                <para>JOB|DAXJOB|DAGJOB - ID is the job identifier in the
                executable workflow ( DAG ).</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para>NOTIFICATION_CONDITION is the condition when the
            notification needs to be sent. The notification conditions are
            enumerated in <link linkend="notification_conditions_table">Table
            1</link></para>
          </listitem>

          <listitem>
            <para>ACTION is what needs to happen when condition is satisfied.
            It is executable + arguments</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>INVOCATION JOB_IDENTIFIER INV.ID NOTIFICATION_CONDITION
        ACTION</para>

        <para>The INVOCATION lines are only generated for clustered jobs, to
        specifiy the finer grained notifications for each constitutent
        job/invocation .</para>

        <itemizedlist>
          <listitem>
            <para>JOB IDENTIFIER is the job identifier in the executable
            workflow ( DAG ).</para>
          </listitem>

          <listitem>
            <para>INV.ID indicates the index of the task in the clustered job
            for which the notification needs to be sent.</para>
          </listitem>

          <listitem>
            <para>NOTIFICATION_CONDITION is the condition when the
            notification needs to be sent. The notification conditions are
            enumerated in <link linkend="notification_conditions_table">Table
            1</link></para>
          </listitem>

          <listitem>
            <para>ACTION is what needs to happen when condition is satisfied.
            It is executable + arguments</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </orderedlist>

    <para>A sample notifications file generated is listed below.</para>

    <programlisting>WORKFLOW d2c4f79c-8d5b-4577-8c46-5031f4d704e8 on_error /bin/date1

INVOCATION merge_vahi-preprocess-1.0_PID1_ID1 1 on_success /bin/date_executable
INVOCATION merge_vahi-preprocess-1.0_PID1_ID1 1 on_success /bin/date_executable
INVOCATION merge_vahi-preprocess-1.0_PID1_ID1 1 on_error /bin/date_executable

INVOCATION merge_vahi-preprocess-1.0_PID1_ID1 2 on_success /bin/date_executable
INVOCATION merge_vahi-preprocess-1.0_PID1_ID1 2 on_error /bin/date_executable

DAXJOB subdax_black_ID000003 on_error /bin/date13
JOB    analyze_ID00004    on_success /bin/date
</programlisting>
  </section>

  <section>
    <title>Configuring pegasus-monitord for notifications. [Fabio]</title>

    <para></para>

    <section>
      <title>Environment set for the Notification Scripts</title>

      <para></para>
    </section>
  </section>

  <section>
    <title>Default Notification Scripts [Mats]</title>

    <para></para>
  </section>

  <section>
    <title>Notification Example [Mats]</title>

    <para></para>
  </section>
</section>