text
network --device eth0 --bootproto dhcp --onboot yes --ipv6 auto
keyboard us
lang en_US.UTF-8
timezone --utc America/Los_Angeles
logging --level=info
zerombr
bootloader --location=mbr --driveorder=sda --append="rhgb quiet selinux=0 vga=792" --timeout=1
clearpart --all --initlabel
part / --fstype=ext4 --label=rootpart --grow --size=1
#url --url=http://gaul.isi.edu/sl/6x/x86_64/os/
#url --url=http://mirrors.usc.edu/pub/linux/distributions/centos/6/os/x86_64/
url --url=http://gaul.isi.edu/centos/6/os/x86_64/
install
auth  --useshadow  --enablemd5
rootpw --plaintext pegasus
firewall --enabled --port=22:tcp
firstboot --disable
selinux --disabled
services --enabled=ntpd,ntpdate
user --name=tutorial --password=pegasus --plaintext
xconfig --startxonboot
poweroff

%packages
@base
@basic-desktop
@desktop-platform
@x11
@fonts
vim
sudo
nano
wget
ntp
#SL_desktop_tweaks
git
firefox
python-setuptools
%end

%post
(
set -x

# Fix up the grub conf
sed -i -e 's/console=ttyS0[^ ]*//' -e 's/^serial.*$//' -e 's/^terminal.*$//' /boot/grub/grub.conf

# Fix up the udev rules that cause problems with virtualbox
rm -f /etc/udev/rules.d/70-persistent-net.rules
echo "#" > /etc/udev/rules.d/75-persistent-net-generator.rules

# This is required for networking on FutureGrid
echo "NOZEROCONF=yes" >> /etc/sysconfig/network

# Make sure the network config doesn't have any junk
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 <<END
TYPE="Ethernet"
DEVICE="eth0"
ONBOOT="yes"
BOOTPROTO="dhcp"
END

# For some reason anaconda won't install condor
cat > /etc/yum.repos.d/condor.repo <<END
[condor]
name=Condor
baseurl=http://www.cs.wisc.edu/condor/yum/stable/rhel6
enabled=1
gpgcheck=0
END
yum install -y condor
chkconfig condor on

# Update condor config
cat >> /etc/condor/condor_config.local <<END
CONDOR_HOST = \$(IP_ADDRESS)
TRUST_UID_DOMAIN = True
END

# Install the Pegasus RPM
curl "@@RPMURL@@" > /tmp/pegasus.rpm
yum install -y /tmp/pegasus.rpm
rm -f /tmp/pegasus.rpm

# Add tutorial user to sudoers file
echo 'tutorial	ALL=(ALL) 	ALL' >> /etc/sudoers

# Create ssh key for tutorial user
mkdir -p /home/tutorial/.ssh
chmod 0700 /home/tutorial/.ssh
ssh-keygen -t rsa -b 2048 -N "" -f /home/tutorial/.ssh/id_rsa
cp /home/tutorial/.ssh/id_rsa.pub /home/tutorial/.ssh/authorized_keys
chmod 0600 /home/tutorial/.ssh/authorized_keys
chown -R tutorial:tutorial /home/tutorial/.ssh

# Create a desktop terminal icon
mkdir -p /home/tutorial/Desktop
cat > /home/tutorial/Desktop/Terminal.desktop <<END
#!/usr/bin/env xdg-open
[Desktop Entry]
Version=1.0
Type=Application
Terminal=false
Name=Terminal
Exec=gnome-terminal
Icon=gnome-terminal
END
chmod 775 /home/tutorial/Desktop/Terminal.desktop

# Install tutorial files
cp -R /usr/share/doc/pegasus/tutorial/* /home/tutorial/
chown -R tutorial:tutorial /home/tutorial
chmod 755 /home/tutorial/bin/* /home/tutorial/*.py /home/tutorial/*.sh

# Install dashboard
git clone https://github.com/pegasus-isi/pegasus-service.git /tmp/pegasus-service
cd /tmp/pegasus-service
git checkout tutorial
python setup.py install
cat >> /etc/rc.local <<END
# Start dashboard
su tutorial -c pegasus-service-server >/var/log/pegasus-service.log 2>&1 &
END
su tutorial -c "mkdir ~/.pegasus"
su tutorial -c "sqlite3 ~/.pegasus/workflow.db 'SELECT 1'"
su tutorial -c "pegasus-service-admin create"
su tutorial -c "pegasus-service-admin useradd tutorial tutorial@localhost -p pegasus"

) 1>/root/post-install.log 2>&1
%end

