#!/usr/bin/env perl
#
# poor man's tool to obtain remote exit code.
#
# $Id: parse-exitcode,v 1.4 2006/07/12 15:22:05 benc Exp $
require 5.6.0;
use strict;
use Getopt::Long;
use Data::Dumper;
use XML::Parser;
use XML::Parser::EasyTree;

# parse options
my $emptyfail = 0;
GetOptions( "emptyfail|e" => \$emptyfail );

# CLI argument
my $fn = shift || die "Need the FQPN of the output file.\n";

# try to determine the exitcode of the last main DAG job
$XML::Parser::EasyTree::Latin = 1;
$XML::Parser::EasyTree::Noempty = 1;

if ( -r $fn ) {
    # file exists and is readable
    if ( -s _ ) {
	# file also has content (as it should have)
	my $xml = (new XML::Parser( Style => 'EasyTree' ))->parsefile($fn);
	if ( defined $xml ) {
	    # XML is readable
	    $xml = $xml->[0];

	    # check type of XML root element - do we have the right thing?
	    die "$fn: does not contain a valid invocation record, assuming failure.\n"
		unless ( $xml->{name} eq 'invocation' );
	    
	    # hunt for mainjob
	    my $i;
	    for ( $i=0; $i < @{$xml->{content}}; ++$i ) {
		last if $xml->{content}->[$i]->{name} eq 'mainjob';
	    }
	    
	    if ( $i >= @{$xml->{content}} ) {
		# main job was not executed, e.g. inaccessible binary
		die "$fn: main job was never executed, assuming failure.\n";
	    } else {
		# position of $i is at mainjob, now hunt for status
		my $main = $xml->{content}->[$i];
		for ( $i=0; $i < @{$main->{content}}; ++$i ) {
		    last if $main->{content}->[$i]->{name} eq 'status';
		}
		warn( $fn, ': exitcode=', 
		      $main->{content}->[$i]->{attrib}->{raw}, "\n" );

		my $status = $main->{content}->[$i]->{content}->[0];
		if ( $status->{name} eq 'regular' ) {
		    my $code = $status->{attrib}->{exitcode};
		    warn "$fn: regular exit with status=$code\n";
		    exit $code;
		} elsif ( $status->{name} eq 'failure' ) {
		    my $code = $status->{attrib}->{error};
		    die "$fn: failure to execute: $code\n";
		} elsif ( $status->{name} eq 'signaled' ) {
		    my $signo = $status->{attrib}->{signo};
		    my $core = $status->{attrib}->{corefile} ? ' (core dumped)' : '';
		    die "$fn: died on signal $signo$core\n";
		} else {
		    die "$fn: illegal status", $status->{name};
		}
	    }
	} else {
	    die "$fn: unable to parse XML, assuming failure.\n";
	}
    } else {
	# file has no content. This is usually due to an NFS 
	# mis-synchronization in the remote pool.
	if ( $emptyfail ) {
	    die "$fn: invocation record is empty, assuming failure.\n";
	} else {
	    warn "$fn: invocation record is empty, assuming success.\n";
	    exit 0;
	}
    }
} else {
    # file is not readable for us
    die "$fn: invocation record does not exist, assuming failure.\n";
}
