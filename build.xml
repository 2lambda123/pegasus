<?xml version="1.0"?>
<project name="pegasus" default="build">
  <property environment="env"/>
  <property file="build.properties"/>
  <property name="build.source" value="1.6"/>
  <property name="build.target" value="1.6"/>
  <property name="make" value="make"/>
  <property name="compile.lint" value="-Xlint:none"/>
  <property name="build.src" location="build/main/classes"/>
  <property name="test.src"  location="build/tests/classes"/>
  <property name="junitreport.dir"  value="${test.src}/junitreport"/>
  <property name="dist.dir" location="dist/pegasus-${pegasus.version}"/>
  <property name="dist.bin" location="${dist.dir}/bin"/>
  <property name="dist.etc" location="${dist.dir}/etc"/>
  <property name="dist.data" location="${dist.dir}/share"/>
  <property name="dist.share" location="${dist.data}/pegasus"/>
  <property name="dist.jars" location="${dist.share}/java"/>
  <property name="dist.doc" location="${dist.dir}/share/doc/pegasus"/>
  <property name="dist.man" location="${dist.data}/man"/>

  <path id="build.classpath">
    <fileset dir="share/pegasus/java" includes="*.jar"/>
  </path>

  <target name="setup" description="Setup the build">
    <echo>Pegasus Version: ${pegasus.version}</echo>
    <echo>JAVA TARGET is ${build.target}</echo>
    <echo>JAVA SOURCE is ${build.source}</echo>

    <tstamp>
      <format property="ISODATE.full" pattern="yyyy-MM-dd'T'HH:mm:ssZZZZZ"/>
      <format property="ISODATE.short" pattern="yyyyMMdd"/>
      <format property="ISODATE.utc" pattern="yyyyMMddHHmmss'Z'" timezone="UTC"/>
      <format property="ISODATE.rpm" pattern="EEE MMM dd yyyy"/>
      <format property="ISODATE.deb" pattern="EEE, d MMM yyyy HH:mm:ss Z"/>
    </tstamp>
    <echo>Build timestamp: ${ISODATE.utc}</echo>

    <!-- Determine the system architecture and platform -->
    <exec executable="${basedir}/release-tools/getsystem/getsystem"
          outputproperty="dist.arch"
          failonerror="true"/>
    <echo>Architecture: ${dist.arch}</echo>

    <!-- Determine the system library location (lib64 or lib) -->
    <exec executable="${basedir}/release-tools/system/determine-lib-dir"
          outputproperty="dist.lib.subdir"
          failonerror="true"/>
    <echo>Library subdir: ${dist.lib.subdir}</echo>
    <property name="dist.lib" location="${dist.dir}/${dist.lib.subdir}"/>

    <!-- Determine the system Python module location -->
    <exec executable="${basedir}/release-tools/python/python-modules-dir"
          outputproperty="dist.python-modules-loc"
          failonerror="true">
      <arg value="${dist.lib.subdir}"/>
    </exec>
    <echo>Python library subdir: ${dist.python-modules-loc}</echo>
    <property name="dist.python-lib" location="${dist.dir}/${dist.python-modules-loc}"/>

    <mkdir dir="dist"/>
    <mkdir dir="${build.src}"/>
    <mkdir dir="${test.src}"/>
    <mkdir dir="${dist.dir}"/>

    <!-- Not sure why these are needed -->
    <echo file="${dist.dir}/stamp">${ISODATE.utc} ${dist.arch}${line.separator}</echo>
    <copy preservelastmodified="true" todir="${build.src}" file="LICENSE"/>

    <!-- Generate build properties file -->
    <propertyfile file="${build.src}/pegasus.build.properties">
      <entry key="pegasus.build.version" value="${pegasus.version}"/>
      <entry key="pegasus.build.platform" value="${dist.arch}"/>
      <entry key="pegasus.build.timestamp" value="${ISODATE.utc}"/>
      <entry key="pegasus.build.libdir" value="${dist.lib.subdir}"/>
      <entry key="pegasus.build.pydir" value="${dist.python-modules-loc}"/>
    </propertyfile>

    <!-- RPM spec file with updated version number -->
    <copy preservelastmodified="true" file="pegasus.spec.in" tofile="pegasus.spec">
      <filterset>
        <filter token="PEGASUS_VERSION" value="${pegasus.version}"/>
        <filter token="DATE" value="${ISODATE.rpm}"/>
      </filterset>
    </copy>

    <!-- Debian changelog file with updated version number -->
    <copy preservelastmodified="true" file="debian/changelog.in" tofile="debian/changelog">
      <filterset>
        <filter token="PEGASUS_VERSION" value="${pegasus.version}"/>
        <filter token="DATE" value="${ISODATE.deb}"/>
      </filterset>
    </copy>

  </target>

  <target name="common" depends="setup" description="Compiles the code common to all Pegasus modules">
    <javac destdir="${build.src}" srcdir="src"
           encoding="UTF-8" deprecation="true" debug="true"
           target="${build.target}" source="${build.source}"
           includes="edu/isi/pegasus/common/**/*.java,edu/isi/pegasus/gridftp/**/*.java"
           excludes="edu/isi/pegasus/common/**/*Test.java,edu/isi/pegasus/planner/**/*.java"
           classpathref="build.classpath"
           includeantruntime="false">
      <compilerarg value="${compile.lint}"/>
    </javac>
  </target>

  <target name="contrib" depends="setup" description="Compiles contributed code .e.g Clemson">
    <javac destdir="${build.src}" srcdir="src"
           encoding="UTF-8" deprecation="true" debug="true"
           target="${build.target}" source="${build.source}"
           includes="edu/clemson/**/*.java"
           excludes="edu/clemson/**/*Test.java"
           classpathref="build.classpath"
           includeantruntime="false">
      <compilerarg value="${compile.lint}"/>
    </javac>
  </target>

  <target name="vdl" depends="setup" description="Compiles the abstract planner Chimera">
    <javac destdir="${build.src}" srcdir="src"
           target="${build.target}" source="${build.source}"
           encoding="UTF-8" debug="true"
           includes="org/griphyn/vdl/*.java,org/griphyn/vdl/**/*.java"
           excludes="org/griphyn/vdl/*Test.java,org/griphyn/vdl/**/*Test.java"
           classpathref="build.classpath"
           includeantruntime="false">
      <compilerarg value="${compile.lint}"/>
    </javac>
  </target>

  <target name="planner" depends="setup" description="Compiles the concrete planner module of Pegasus">
    <javac destdir="${build.src}" srcdir="src"
           target="${build.target}" source="${build.source}"
           encoding="UTF-8" debug="true"
           includes="edu/isi/pegasus/planner/**/*.java"
           excludes="edu/isi/pegasus/planner/**/*Test.java,org/griphyn/**/*.java"
           classpathref="build.classpath"
           includeantruntime="false">
      <compilerarg value="${compile.lint}"/>
    </javac>
  </target>

  <target name="tests" depends="setup,common,planner" description="Compiles the tests for Pegasus Planner">
    <javac destdir="${test.src}" srcdir="test/junit"
           target="${build.target}" source="${build.source}"
           encoding="UTF-8" debug="true"
           includes="edu/isi/pegasus/**/*.java"
           includeantruntime="false">
      <classpath>
        <path refid="build.classpath"/>
        <path location="${build.src}"/>
      </classpath>
      <compilerarg value="${compile.lint}"/>
    </javac>
  </target>

  <target name="examples" depends="setup" description="Compiles all examples">
    <javac destdir="${build.src}" srcdir="src"
           target="${build.target}" source="${build.source}"
           encoding="UTF-8" debug="true"
           includes="examples/**/*.java"
           excludes="org/griphyn/**/*.java"
           classpathref="build.classpath"
           includeantruntime="false">
      <compilerarg value="${compile.lint}"/>
    </javac>
  </target>

  <target name="jar" depends="contrib,common,planner,examples" description="Create the PEGASUS JAR files excluding tests">
    <mkdir dir="${dist.jars}"/>
    <jar destfile="${dist.jars}/pegasus.jar" basedir="${build.src}"
         includes="*.properties,edu/isi/pegasus/**/*.class,edu/isi/ikcap/**/*.class,edu/clemson/**/*.class"
         excludes="*.class,edu/isi/pegasus/planner/test/**/*.class,edu/isi/pegasus/**/*Test.class,org/griphyn/**/*Test.class,org/griphyn/**/*.class"/>
    <chmod perm="0644" file="${dist.jars}/pegasus.jar"/>
  </target>

  <target name="test-jar" depends="tests" description="Create the test jar files to use for unit tests">
    <mkdir dir="${dist.jars}"/>
    <jar destfile="${dist.jars}/pegasus-test.jar" basedir="${test.src}"
         includes="edu/isi/pegasus/**/*.class"/>
    <chmod perm="0644" file="${dist.jars}/pegasus-test.jar"/>
  </target>

  <target name="vdl-jar" depends="vdl" description="Create the VDL JAR files excluding tests">
    <mkdir dir="${dist.jars}"/>
    <jar destfile="${dist.jars}/vdl.jar" basedir="${build.src}"
         includes="org/griphyn/vdl/**/*.class,org/griphyn/vdl/*.class"
         excludes="*.class,org/griphyn/vdl/**/*Test.class,org/griphyn/vdl/*Test.class,edu/isi/pegasus/**/*.jar"/>
    <chmod perm="644" file="${dist.jars}/vdl.jar"/>
  </target>

  <target name="manpages" depends="setup" description="Generates manpages">
    <exec executable="${make}" dir="doc/manpages" failonerror="true">
      <arg line="prefix=${dist.dir} install"/>
    </exec>
  </target>

  <target name="user-guide" depends="setup" description="Generates user guide from docbook source">
    <mkdir dir="${dist.doc}"/>
    <exec executable="${make}" dir="doc/docbook" failonerror="true">
      <arg line="prefix=${dist.doc} install"/>
    </exec>
  </target>

  <target name="javadoc" depends="setup" description="Generates the javadoc auto-documentation">
    <delete dir="${dist.doc}/html/javadoc"/>
    <javadoc destdir="${dist.doc}/html/javadoc"
             Author="true"
             Use="true"
             Version="true"
             Private="true"
             Windowtitle="PEGASUS"
             classpathref="build.classpath">
      <packageset dir="src">
        <include name="edu/isi/pegasus/**"/>
        <include name="edu/isi/ikcap/**"/>
      </packageset>
      <fileset dir="src" includes="*.java"/>
      <doctitle><![CDATA[PEGASUS ${pegasus.version}]]></doctitle>
      <group title="Pegasus" packages="edu.isi.pegasus.*"/>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
    </javadoc>
  </target>

  <target name="pythondoc" depends="setup" description="Generates the python DAX documentation">
    <!-- TODO Wouldn't it be better to put this in a script? -->
    <delete dir="${dist.doc}/html/python"/>
    <mkdir dir="${dist.doc}/html/python"/>
    <exec executable="pydoc" dir="${basedir}/lib/pegasus/python/Pegasus" failonerror="true">
      <arg line="-w"/>
      <arg line="DAX3"/>
      <env key="PYTHONDOCS" value="http://docs.python.org/library/"/>
    </exec>
    <!-- remove local file paths and make them links relative -->
    <exec executable="perl" dir="${basedir}/lib/pegasus/python/Pegasus" failonerror="true">
      <arg line="-p"/>
      <arg line="-i"/>
      <arg line="-e"/>
      <arg line="'s:(file\:){0,1}[\w\.\-_/]+lib/pegasus/python/Pegasus/::g'"/>
      <arg line="DAX3.html"/>
    </exec>
    <!-- change the file name from DAX3.html to index.html -->
    <exec executable="perl" dir="${basedir}/lib/pegasus/python/Pegasus" failonerror="true">
      <arg line="-p"/>
      <arg line="-i"/>
      <arg line="-e"/>
      <arg line="'s/DAX3\.html/index.html/g'"/>
      <arg line="DAX3.html"/>
    </exec>
    <!-- prepend core module links with http://docs.python.org/library/ -->
    <exec executable="perl" dir="${basedir}/lib/pegasus/python/Pegasus" failonerror="true">
      <arg line="-p"/>
      <arg line="-i"/>
      <arg line="-e"/>
      <arg line="'s/&quot;(codecs|os|sys|shlex|datetime|exceptions)\.html/&quot;http:\/\/docs.python.org\/library\/\1.html/g'"/>
      <arg line="DAX3.html"/>
    </exec>
    <exec executable="/bin/mv" dir="${basedir}/lib/pegasus/python/Pegasus" failonerror="true">
      <arg line="DAX3.html"/>
      <arg line="${dist.doc}/html/python/index.html"/>
    </exec>
    <!-- the documentation also links to the source module, so we need a copy -->
    <exec executable="/bin/cp" dir="${basedir}/lib/pegasus/python/Pegasus" failonerror="true">
      <arg line="DAX3.py"/>
      <arg line="${dist.doc}/html/python/DAX3.py"/>
    </exec>
  </target>

  <target name="perldoc" depends="setup" description="Generates the perl DAX documentation">
    <delete dir="${dist.doc}/html/perl"/>
    <mkdir dir="${dist.doc}/html/perl"/>
    <exec executable="./libexec/perl-docs" dir="${basedir}" failonerror="true">
      <arg line="${dist.doc}/html/perl"/>
    </exec>
  </target>

  <target name="schemas" depends="setup">
    <!-- doc schemas -->
    <mkdir dir="${dist.doc}/schemas"/>
    <copy preservelastmodified="true" todir="${dist.doc}/schemas">
      <fileset dir="doc/schemas" includes="**/*"/>
    </copy>
    <fixcrlf srcdir="${dist.doc}/schemas" includes="**/*.xsd" eol="lf"/>
    <fixcrlf srcdir="${dist.doc}/schemas" includes="**/*.xml" eol="lf"/>
  </target>

  <target name="doc" depends="setup,schemas,manpages,user-guide,javadoc,pythondoc,perldoc"/>

  <target name="ctools" depends="setup" description="Compiles all C tools and installs them">
    <mkdir dir="${dist.bin}"/>
    <exec executable="${make}" dir="src/tools" failonerror="true">
      <env key="prefix" value="${dist.dir}"/>
      <env key="datadir" value="${dist.data}"/>
      <arg line="prefix=${dist.dir}"/>
      <arg line="datadir=${dist.data}"/>
      <arg line="install"/>
    </exec>
  </target>

  <target name="externals" depends="setup" description="Compiles and installs external dependencies">
    <mkdir dir="${dist.lib}/pegasus/externals/python"/>
    <exec executable="${make}" dir="src/externals" failonerror="true">
      <env key="prefix" value="${dist.dir}"/>
      <env key="libdir" value="${dist.lib}/pegasus"/>
      <arg line="prefix=${dist.dir} libdir=${dist.lib}/pegasus/externals all"/>
    </exec>
  </target>

  <target name="pegasus-config" depends="setup">
    <mkdir dir="${dist.bin}"/>
    <copy preservelastmodified="true" todir="${dist.bin}">
      <fileset dir="bin">
          <include name="pegasus-config"/>
      </fileset>
      <filterset>
        <filter token="PEGASUS_VERSION" value="${pegasus.version}"/>
        <filter token="LIBDIR" value="${dist.lib.subdir}"/>
      </filterset>
    </copy>
  </target>

  <target name="dist-doc" depends="dist-clean,doc">
    <tar destfile="dist/pegasus-doc-${pegasus.version}.tar.gz"
         basedir="dist" longfile="gnu" compression="gzip"
         includes="pegasus-${pegasus.version}/share/man/**,pegasus-${pegasus.version}/share/doc/**"/>
  </target>

  <target name="dist-worker" depends="dist-clean,setup,pegasus-config,ctools,externals">
    <!-- bin -->
    <copy preservelastmodified="true" todir="${dist.bin}">
      <fileset dir="bin">
          <include name="pegasus-cleanup"/>
          <include name="pegasus-create-dir"/>
          <include name="pegasus-s3"/>
          <include name="pegasus-transfer"/>
          <!-- add script files to copy as necessary -->
      </fileset>
    </copy>
    <chmod perm="0755" type="file">
      <fileset dir="${dist.bin}">
        <include name="*"/>
      </fileset>
    </chmod>

    <copy preservelastmodified="true" todir="${dist.dir}" file="LICENSE"/>

    <package-binary name="pegasus-worker-${pegasus.version}-${dist.arch}"/>
  </target>


  <target name="dist-common" depends="dist-clean,setup,jar,vdl-jar,pegasus-config,ctools,externals">
    <!-- bin -->
    <copy preservelastmodified="true" todir="${dist.bin}">
      <fileset dir="bin">
        <exclude name=".gitignore"/>
        <exclude name="pegasus-config"/>
      </fileset>
    </copy>
    <chmod perm="0755" type="file">
      <fileset dir="${dist.bin}">
        <include name="*"/>
      </fileset>
    </chmod>

    <!-- etc -->
    <mkdir dir="${dist.etc}"/>
    <copy preservelastmodified="true" todir="${dist.etc}">
      <fileset dir="etc" includes="**/*"/>
    </copy>

    <!-- lib -->
    <mkdir dir="${dist.lib}/pegasus/javascript"/>
    <copy preservelastmodified="true" todir="${dist.lib}/pegasus/javascript">
      <fileset dir="lib/pegasus/javascript" includes="**/*.js"/>
    </copy>
    <mkdir dir="${dist.lib}/pegasus/perl"/>
    <copy preservelastmodified="true" todir="${dist.lib}/pegasus/perl">
      <fileset dir="lib/pegasus/perl" includes="**/*.pm"/>
    </copy>
    <mkdir dir="${dist.lib}/pegasus/php"/>
    <copy preservelastmodified="true" todir="${dist.lib}/pegasus/php">
      <fileset dir="lib/pegasus/php" includes="**/*.php"/>
    </copy>
    <mkdir dir="${dist.python-lib}"/>
    <copy preservelastmodified="true" todir="${dist.python-lib}">
      <fileset dir="lib/pegasus/python" includes="**/*.py"/>
    </copy>
    <!-- Put a copy in the old Python location to be backward compatible -->
    <mkdir dir="${dist.lib}/pegasus/python"/>
    <copy preservelastmodified="true" todir="${dist.lib}/pegasus/python">
      <fileset dir="lib/pegasus/python" includes="**/*.py"/>
    </copy>
    <chmod perm="0755" type="file">
    <fileset dir="${dist.lib}/pegasus/python">
        <include name="Pegasus/plots_stats/plots/populate.py"/>
        <include name="Pegasus/plots_stats/plots/pegasus_breakdown.py"/>
        <include name="Pegasus/plots_stats/plots/pegasus_time.py"/>
        <include name="Pegasus/tools/kickstart_parser.py"/>
      </fileset>
    </chmod>

    <!-- share -->
    <mkdir dir="${dist.share}"/>
    <copy preservelastmodified="true" todir="${dist.share}">
      <fileset dir="share/pegasus" includes="**/*">
        <exclude name=".gitignore"/>
      </fileset>
    </copy>
    <chmod perm="0755" type="file">
      <fileset dir="${dist.share}" includes="**/*.sh"/>
      <fileset dir="${dist.share}" includes="**/*.py"/>
      <fileset dir="${dist.share}" includes="**/*.pl"/>
    </chmod>
    <chmod perm="0755" type="file">
      <fileset dir="${dist.share}/notification" includes="*"/>
    </chmod>
    <chmod perm="0755" type="file">
      <fileset dir="${dist.share}/visualize">
        <exclude name="README"/>
        <exclude name="Common.pm"/>
      </fileset>
    </chmod>
    <chmod perm="0755" type="file">
      <fileset dir="${dist.share}/examples" includes="**/submit"/>
      <fileset dir="${dist.share}/examples" includes="**/*.sh"/>
      <fileset dir="${dist.share}/examples" includes="**/*.py"/>
      <fileset dir="${dist.share}/examples" includes="**/*.pl"/>
      <fileset dir="${dist.share}/examples" includes="**/*.exe"/>
      <fileset dir="${dist.share}/examples" includes="**/split"/>
      <fileset dir="${dist.share}/examples" includes="**/submit-workflow*"/>
      <fileset dir="${dist.share}/examples" includes="**/galactic-plane/galactic-plane"/>
      <fileset dir="${dist.share}/examples" includes="**/galactic-plane/local*"/>
      <fileset dir="${dist.share}/examples" includes="**/galactic-plane/remote*"/>
    </chmod>
    <chmod perm="0644" type="file">
      <fileset dir="${dist.jars}" includes="*.jar"/>
    </chmod>

    <copy preservelastmodified="true" todir="${dist.dir}">
      <fileset dir="${basedir}">
        <include name="README"/>
        <include name="LICENSE"/>
        <include name="RELEASE_NOTES"/>
      </fileset>
    </copy>
  </target>

  <macrodef name="package-binary">
    <attribute name="name"/>
    <sequential>
      <!-- creates the binary tarball -->
      <exec executable="sh" dir="dist" failonerror="true">
        <arg value="-c"/>
        <arg value="tar --exclude=\.git --exclude=\.gitignore -cf @{name}.tar pegasus-${pegasus.version}"/>
      </exec>
      <gzip src="dist/@{name}.tar" destfile="dist/@{name}.tar.gz"/>
      <delete file="dist/@{name}.tar"/>
    </sequential>
  </macrodef>

  <target name="dist" depends="dist-common,doc">
    <package-binary name="pegasus-binary-${pegasus.version}-${dist.arch}"/>
  </target>

  <target name="dist-nodoc" depends="dist-common">
    <package-binary name="pegasus-binary-${pegasus.version}-${dist.arch}"/>
  </target>

  <target name="dist-clean">
    <delete dir="${dist.dir}"/>
  </target>

  <target name="clean" description="Delete all build artifacts">
    <delete dir="dist"/>
    <delete dir="build"/>
    <exec executable="${make}" dir="src/tools" failonerror="true">
      <arg line="distclean"/>
    </exec>
    <exec executable="${make}" dir="src/externals" failonerror="true">
      <arg line="clean"/>
    </exec>
    <exec executable="${make}" dir="doc/manpages" failonerror="true">
      <arg line="clean"/>
    </exec>
    <exec executable="${make}" dir="doc/docbook" failonerror="true">
      <arg line="clean"/>
    </exec>
  </target>

  <target name="build" depends="jar,vdl-jar,ctools"/>

  <target name="junit-xml" depends="jar,vdl-jar,test-jar" description="Execute the Java Unit Tests for the Pegasus Planner">
    <mkdir dir="${junitreport.dir}"/>
    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <path refid="build.classpath"/>
        <path location="${dist.jars}/pegasus.jar"/>
        <path location="${dist.jars}/pegasus-test.jar"/>
        <path location="${dist.jars}/vdl.jar"/>
      </classpath>
      <formatter type="xml"/>
      <test name="edu.isi.pegasus.planner.test.AllTests" todir="${junitreport.dir}"/>
    </junit>
  </target>

  <target name="junit" depends="jar,vdl-jar,test-jar" description="Execute the Java Unit Tests for the Pegasus Planner">
    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <path refid="build.classpath"/>
        <path location="${dist.jars}/pegasus.jar"/>
        <path location="${dist.jars}/pegasus-test.jar"/>
        <path location="${dist.jars}/vdl.jar"/>
      </classpath>
      <batchtest>
        <fileset dir="${test.src}">
          <include name="**/*Test.class"/>
          <exclude name="**/AllTests.class"/>
        </fileset>
        <formatter type="brief" usefile="no"/>
      </batchtest>
    </junit>
  </target>

  <target name="test-java" depends="junit"/>

  <target name="test-python" description="Execute python unit tests">
    <exec executable="/usr/bin/env" dir="lib/pegasus/python" failonerror="true">
        <arg line="python Pegasus/test/runtests.py"/>
    </exec>
  </target>

  <target name="test" depends="test-python,test-java"/>
</project>

