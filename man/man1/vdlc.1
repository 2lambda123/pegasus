.\" This file or a portion of this file is licensed under the terms of
.\" the Globus Toolkit Public License, found in file GTPL, or at
.\" http://www.globus.org/toolkit/download/license.html. This notice must
.\" appear in redistributions of this file, with or without modification.
.\"
.\" Redistributions of this Software, with or without modification, must
.\" reproduce the GTPL in: (1) the Software, or (2) the Documentation or
.\" some other similar material which is provided with the Software (if
.\" any).
.\"
.\" Copyright 1999-2004 University of Chicago and The University of
.\" Southern California. All rights reserved.
.\"
.\"
.\" $Id: vdlc.1,v 1.9 2006/09/09 17:00:52 benc Exp $
.\"
.\" Authors: Jens-S. Vöckler, Yong Zhao
.\"
.\"
.TH vdlc 1 "May, 16th 2005"
.SH NAME
vdlc \- pipeline VDC commands into one JVM invocation
.SH SYNOPSIS
.B vdlc
[\-Dprop [..]] [\-d db-prefix] [\-n vdlns] [\-v vdlvs] [\-r rejects] [\-i] [\-l label] [\-o daxfn] [\-m max] [\-X xmlns] [\-D dv,..] [\-L lod] [\-f lfn,..] [\-F lof] [\-\-verbose] vdlt|vdlx [..]
.PP
.B vdlc
[\-Dprop [..]] \-V
.SH DESCRIPTION
The usual pipeline of work for generating an abstract workflow through
the Virtual Data System consists of the steps 
.I vdlt2vdlx
(optional), 
.I insertvdc 
or
.IR updatevdc , 
and 
.IR gendax .
The 
.I vdlc
command combines all these steps into one convenient call. The
additional benefit is that only one Java virtual machine will be started
to process all steps.  
.SH ARGUMENTS
.TP
.B \-Dprop
The -D options allows an experienced user to override certain properties
which influence the program execution, among them the default location of
the user's properties file and the VDS home location. One may set several
CLI properties by giving this option multiple times.
.I The -D option(s) must be the first option on the command line. 
A CLI property take precedence over the properties file property 
of the same key.
.TP
.B \-d db-prefix 
.PD 0
.TP
.PD 1
.B \-\-dbase db-prefix
The database prefix is currently unused.
.IP
Default is to use the VDC pointed to by the
.I vds.db.schema
property. If this property is unset, the 
.I SingleFileSchema
becomes the chosen schema, and the property
.I vds.db.schema.file.store
defaults to
.IR $VDS_HOME/var/vds.db ,
the eventual default database file.
.TP
.B \-n vdlns
.PD 0
.TP
.PD 1
.B \-\-vdlns vdlns
.PD 0
.TP
.PD 1
.B \-\-ns vdlns
This parameter allows to set the value for the 
.I vdlns
attribute that is part of the generated definitions VDLx. The attribute
will become the default namespace of all enclosed definitions, unless
they set a namespace of their own. It is only used on VDLt input files.
.IP
By default, the 
.I vdlns
attribute is null, and will not be set in the output.
.IP
Note: If in doubt, do not use this option.
.TP
.B \-v version
.PD 0
.TP
.PD 1
.B \-\-vdlvs version
sets the version number of a definition. The version will become the
default version number of all  enclosed definitions, unless they
set a version of their own. It is only used on VDLt input files.
.IP
By default, the 
.I version
attribute is 1.0 to be backward compatible.
.IP
Note: If in doubt, do not use this option.
.TP
.B \-r rejects
.PD 0
.TP
.PD 1
.B \-\-rejects rejects
If an update operation replaces a definition, or an insertion cannot
update a definition, you can collect the rejected versions into a file.
Please note that this file is not a VDLx file. Rather, it is a
collections of definitions, some of which may overlap, if the same
definition is replace multiple times.
.IP
Default is to run without collecting rejects, which is more memory
efficient, and should be faster.
.TP
.B \-i
.PD 0
.TP
.PD 1
.B \-\-insert
The insert command allows to add only new definitions to the database.
Already existing definitions are not modified. This mode is generally
faster than the default update mode.
.IP
Default is update mode. Existing definitions are replaced as necessary. 
.TP
.PD 0
.B \-m max
.TP
.PD 1
.B \-\-maxdepth max
The maximum depth option allows to limit the extend and thus time of the
search. It limits the construction of the abstract DAG to those jobs that
could be found, starting from the data product to materialize. 
.IP
The maximum depth for cut-off is counted as hops along the 
.IR minimum
path from the root of the search to any node. The level of a job as 
reported inside the resulting DAX file counts along the
.IR maximum
path from the root to any node. Therefore, in the case of unbalanced
paths, the result may contain jobs that have a level labeling which is
higher than maxdepth argument.
.IP
Default is to use a maximum depth of 256. You will need to increase
the limit for complex workflows. 
.TP
.PD 0
.B \-l label
.TP
.PD 1
.B \-\-label label
The label is then name given to an output DAX. If no label is specified,
a label will be guessed from the basename minus suffix of the first
filename argument. The label of a DAX is being used by the concrete
planner for various purposes. It will become part of each generated
submit file, thus you may want to give you DAXes a distinct name that
allows you to select jobs belonging to one workflow.
.IP
The DAX label is used by the concrete planner to generate the DAG- and
logfile names by appending the appropriate suffix. 
.IP
Default is to use the name
.IR test
as a label, if the basename guessing does not work.
.I You should always use a descriptive label other than test.
.TP
.PD 0
.B \-o fn
.TP
.PD 1
.B \-\-output fn
The optional output attributes allows to redirect the product DAX 
into the specified file. If this option is not specified, an output file
will be guessed from the basename of the first VDL filename minus its
suffix plus suffix ".dax". If the guess fails, 
.I stdout
will be used. You can force the use of 
.I stdout
with the special filename of hyphen (\-). Please note that debug
messages on
.I stderr
might mingle with the production output.
.IP
Default is to guess a filename from the first VDL file, or use
.I stdout
to print the DAX.
.TP
.B \-X xmlns
.PD 0
.TP
.PD 1
.B \-\-xmlns xmlns
This option permits to generate an explicit namespace for the DAX file.
Documents with explicit namespace are easier to incorporate into other
XML documents. 
.IP
Default is not to use XML namespaces in the DAX document. 
.PP
The following arguments permit a more streamlined approach to generated
jobs. If none is specified, 
.B all 
derivation in the VDLt files are requested. Note that this is usually
.B not
a good default for most users. 
.TP
.B \-D def,..
.PD 0
.TP
.PD 1
.B \-\-deflist def,..
This option takes the definition identifier, or possibly
comma-separated list thereof, as argument. The search encompasses all
specified defitions, which may be under-specified. This option may be
specified multiple times. 
.TP
.PD 0
.B \-L fn
.TP
.PD 1
.B \-\-deflist fn
This mode of operation permits to extend beyond commandline length
limitations. The file specified by
.I fn
contains one definition per line, or empty lines. Comments start with a
# and extend to the end of the line. This option may be specified
multiple times. 
.IP
There is no default.
.TP
.B \-f lfn
.PD 0
.TP
.PD 1
.B \-\-lfn lfn
allow to search for the specified logical filename. The
.I \-t 
argument limits the search to input, output and inout files
respectively. The 
.I \-f 
argument specifies the logical filename. You must specify a one or
both options.
.IP
Default is to list all filenames. 
.TP
.B \-e
.PD 0
.TP
.PD 1
.B \-\-empty
Makes an empty output DAX permissible, suppressing the error that otherwise
will occur when there is nothing in the output DAX.
.TP
.B \-F fn
.PD 0
.TP
.PD 1
.B \-\-filelist fn
This mode of operation permits to extend beyond commandline length
limitations. The file specified by
.I fn
contains one logical filename per line, or empty lines. Comments start
with a # and extend to the end of the line. This option may be specified
multiple times.
.IP
Default is to list all filenames. 
.TP
.B vdlt|vdlx [..]
Required arguments are one or more either VDLt or VDLx files to process. 
Mixing of VDLt and VDLx is permitted. The type of the file is determined
on the contents of the file in its first lines. The suffix does 
.B not
determine how the file is processed - though descriptive suffices are
always encouraged. 
.TP
.B \-V
.PD 0
.TP
.PD 1
.B \-\-version
displays the version of the GriPhyN Virtual Data System you are using.
.TP
.B \-\-verbose
increases the verbosity of messages about what is going on. 
.SH "RETURN VALUE"
If the abstract routing produced any result, the exit code will be 0. If 
the routing process ran successfully, but failed to produce a result,
the exit code will be 1. Regular runtime errors produce an exit code of
2. The error message of runtime errors should help to pin-point the
problem. Aborted executions result in an exit code of 3. In this case,
please first examine the message and your configuration files was well
as the way you invoke 
.I vdlc
before filing an error report. 
.SH FILES
.TP
.B $VDS_HOME/etc/vdl-1.24.xsd
is the suggested location of the latest XML schema to read the database.
.TP
.B $VDS_HOME/etc/dax-1.8.xsd
is the suggested location of the latest DAX schema to produce DAX output.
.TP
.B $VDS_HOME/etc/properties
contains the system properties with all configurable options.
.TP
.B $HOME/.vdsrc
contains the user properties with all configurable options.
.TP
.B gvds.jar
contains all compiled Java bytecode to run the GriPhyN Virtual Data System.
.SH "ENVIRONMENT VARIABLES"
.TP
.B $VDS_HOME
is the suggested base directory of your the execution environment.
.TP
.B $JAVA_HOME
should be set and point to a valid location to start the intended Java
virtual machine as
.IR $JAVA_HOME/bin/java .
.TP
.B $CLASSPATH
should be set to contain all necessary files for the execution environment.
Please make sure that your 
.I CLASSPATH
includes the Xerces 2.0.1 classes.
.SH "SEE ALSO"
.BR vdlt2vdlx (1),
.BR insertvdc (1),
.BR updatevdc (1),
.BR gendax (1).
.SH EXAMPLE
.nf
\f(CB
$ vdlc --dv voeckler::bottom:1.0 -o blackdiamond.dax blackdiamond.vdl
20050929T151317.746: [app] using label "blackdiamond"

$ echo $?
0
\fP
.fi
.PP
Please note that the log information goes to 
.I stderr
while the production output goes to
.IR stdout .
Thus you are able to separate.
.PP
If you are only adding a single derivation, or multiple indepedent
derivations, you do not need to specify which derivation to produce.
As a convenience mode, all DVs in one or more given pieces of VDL are
derived, if neither DVs nor data product LFNs are specified on the 
command-line:
.nf
\f(CB
$ vdlc -o blackdiamond.dax blackdiamond.vdl
20051102T182516.681: [app] using label "blackdiamond"

$ echo $?
0
\fP
.fi
.PP

.SH RESTRICTIONS
Plenty. 
.SH AUTHORS
Jens-S. Vöckler <voeckler at cs dot uchicago dot edu>,
.\"Jens-S. V\*:ockler 
.br
Mike Wilde <wilde at mcs dot anl dot gov>,
.br
Yong Zhao <yongzh at cs dot uchicago dot edu>.
.PP
VDS
.B http://www.griphyn.org/vds/
.br
GriPhyN
.BR http://www.griphyn.org/
